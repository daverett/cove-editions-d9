{"version":3,"file":"annotorious-react.es2.js","sources":["../src/Annotorious.tsx"],"sourcesContent":["import { onUserSelect } from '@annotorious/core';\nimport type { StoreObserveOptions, UserSelectActionExpression} from '@annotorious/core';\nimport { useDebounce } from './useDebounce';\nimport { \n  createContext, \n  forwardRef, \n  type ReactNode, \n  useContext, \n  useEffect, \n  useImperativeHandle, \n  useState \n} from 'react';\nimport type {\n  Annotation,\n  Annotator,\n  Selection as CoreSelection,\n  ImageAnnotation,\n  Store,\n  StoreChangeEvent,\n  User\n} from '@annotorious/annotorious';\n\ninterface Selection<T extends Annotation = Annotation> extends Omit<CoreSelection, 'selected'> {\n\n  selected: { annotation: T, editable?: boolean }[];\n\n}\n\nexport const AnnotoriousContext = createContext({ \n\n  anno: undefined, \n\n  setAnno: undefined, \n\n  annotations: [], \n\n  selection: { selected: [] }\n\n});\n\nexport const Annotorious = forwardRef<Annotator, { children: ReactNode }>((props: { children: ReactNode }, ref) => {\n\n  const [anno, setAnno] = useState<Annotator>(null);\n\n  const [annotations, setAnnotations] = useState<Annotation[]>([]);\n\n  const [selection, setSelection] = useState<Selection>({ selected: [] });\n\n  useImperativeHandle(ref, () => anno);\n\n  useEffect(() => {\n    if (anno) {\n      const { selection, store, hover } = anno.state;\n\n      // Components below <Annotorious /> may have\n      // loaded annotations into the store already! \n      if (store.all().length > 0)\n        setAnnotations(store.all());\n\n      // Keeps annotations in sync with a React state,\n      // so clients can render components the usual React way.\n      const onStoreChange = () => setAnnotations(() => store.all());\n\n      store.observe(onStoreChange);\n\n      // Keep selection in sync with a react state, and resolve them\n      // from IDs to annotations automatically, for convenience\n      let selectionStoreObserver: (event: StoreChangeEvent<Annotation>) => void;\n\n      const unsubscribeSelection = selection.subscribe(({ selected, ...rest }) => {\n        if (selectionStoreObserver) \n          store.unobserve(selectionStoreObserver);\n\n        const resolved = (selected || [])\n          .map(({ id, editable }) => ({ annotation: store.getAnnotation(id), editable }));\n\n        setSelection({ selected: resolved, ...rest });\n\n        selectionStoreObserver = event => {\n          const { updated } = event.changes;\n\n          setSelection((selection) => ({\n            ...selection,\n            selected: selection.selected.map(({ annotation, editable }) => {\n              const next = updated.find(u => u.oldValue.id === annotation.id);\n              return next ? { annotation: next.newValue, editable } : { annotation, editable };\n            })\n          }));\n        }\n\n        store.observe(selectionStoreObserver, { annotations: selected.map(({ id }) => id) });\n      });\n\n      return () => {\n        store.unobserve(onStoreChange);\n        unsubscribeSelection();\n      }\n    }\n  }, [anno]);\n\n  return (\n    <AnnotoriousContext.Provider value={{ \n      anno, \n      setAnno,\n      annotations, \n      selection \n    }}>\n       {props.children}\n    </AnnotoriousContext.Provider>\n  )\n\n});\n\nexport const useAnnotator = <T extends unknown = Annotator<any, unknown>>() => {\n  const { anno } = useContext(AnnotoriousContext);\n  return anno as T;\n}\n\nexport const useAnnotationStore = <T extends unknown = Store<Annotation>>() => {\n  const { anno } = useContext(AnnotoriousContext);\n  return anno?.state.store as T | undefined;\n}\n\nconst _useAnnotations = <T extends Annotation>() => {\n  const { annotations } = useContext(AnnotoriousContext);\n  return annotations as T[];\n}\n\nconst _useAnnotationsDebounced = <T extends Annotation>(debounce: number) => {\n  const { annotations } = useContext(AnnotoriousContext);\n  return useDebounce(annotations, debounce) as T[];\n}\n\nexport const useAnnotations = <T extends Annotation = ImageAnnotation>(debounce?: number) =>\n  debounce ? _useAnnotationsDebounced<T>(debounce) : _useAnnotations<T>();\n\nexport const useAnnotation = <T extends Annotation = ImageAnnotation>(\n  id: string, \n  options?: Omit<StoreObserveOptions, 'annotations'>\n) => {\n  const store = useAnnotationStore<Store<T>>();\n\n  const [annotation, setAnnotation] = useState<T | undefined>(\n    store?.getAnnotation(id)\n  );\n\n  useEffect(() => {\n    if (!store) return;\n\n    const handleChange = (event: StoreChangeEvent<T>) => {\n      const updated = event.changes.updated[0];\n      if (updated) {\n        setAnnotation(updated.newValue);\n      }\n    };\n\n    store.observe(handleChange, { ...options, annotations: id });\n    return () => store.unobserve(handleChange);\n  }, []);\n\n  return annotation;\n}\n\nexport const useAnnotationSelectAction = <I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation>(id: string, action: UserSelectActionExpression<E>) => {\n  const annotation = useAnnotation<I>(id);\n  return annotation ? onUserSelect<I, E>(annotation, action) : undefined;\n}\n\nexport const useSelection = <T extends Annotation = ImageAnnotation>() => {\n  const { selection } = useContext(AnnotoriousContext);\n  return selection as Selection<T>;\n}\n\nexport const useHover = <T extends Annotation = ImageAnnotation>() => {\n  const { anno } = useContext(AnnotoriousContext);\n\n  const [hover, setHover] = useState<T | undefined>();\n\n  useEffect(() => {\n    if (!anno) return;\n\n    const { hover, store } = (anno as Annotator<T, unknown>).state;\n\n    const unsubscribeHover = hover.subscribe(id => {\n      if (id) {\n        const annotation = store.getAnnotation(id);\n        setHover(annotation);\n      } else {\n        setHover(undefined);\n      }\n    });\n  \n    return () => {\n      unsubscribeHover();\n    }\n  }, [anno]);\n\n  return hover;\n}\n\nexport const useAnnotatorUser = (): User => {\n  const { anno } = useContext(AnnotoriousContext);\n  return anno?.getUser();\n}\n\nconst _useViewportState = <T extends Annotation>() => {\n  const { anno } = useContext(AnnotoriousContext);\n\n  const [inViewport, setInViewport] = useState<T[]>([]);\n\n  useEffect(() => {\n    if (anno) {\n      const { store, viewport } = anno.state;\n\n      if (!viewport)\n        return;\n\n      // Keep viewport annotations in sync with a react state, and resolve them\n      // from IDs to annotations automatically, for convenience\n      let viewportStoreObserver: (event: StoreChangeEvent<T>) => void;\n\n      const unsubscribeViewport = viewport.subscribe(ids => {\n        if (viewportStoreObserver) \n          store.unobserve(viewportStoreObserver);\n\n        const resolved = ids.map(id => store.getAnnotation(id)) as T[];\n        setInViewport(resolved);\n\n        viewportStoreObserver = event => {\n          const { updated } = event.changes;\n\n          setInViewport(annotations => annotations.map(annotation => {\n            const next = updated.find(u => u.oldValue.id === annotation.id);\n            return next ? next.newValue : annotation;\n          }));\n        }\n\n        store.observe(viewportStoreObserver, { annotations: ids });\n      });\n\n      return () => {\n        unsubscribeViewport();\n      }\n    }\n  }, [anno]);\n\n  return inViewport;\n}\n\nconst _useViewportStateDebounced =  <T extends Annotation>(debounce: number) => {\n  const inViewport = _useViewportState();\n  return useDebounce(inViewport, debounce) as T[];\n}\n\nexport const useViewportState =  <T extends Annotation = ImageAnnotation>(debounce?: number) =>\n  debounce ? _useViewportStateDebounced<T>(debounce) : _useViewportState<T>();\n"],"names":["AnnotoriousContext","createContext","Annotorious","forwardRef","props","ref","anno","setAnno","useState","annotations","setAnnotations","selection","setSelection","useImperativeHandle","useEffect","store","hover","onStoreChange","selectionStoreObserver","unsubscribeSelection","selected","rest","resolved","id","editable","event","updated","annotation","next","u","jsx","useAnnotator","useContext","useAnnotationStore","_useAnnotations","_useAnnotationsDebounced","debounce","useDebounce","useAnnotations","useAnnotation","options","setAnnotation","handleChange","useAnnotationSelectAction","action","onUserSelect","useSelection","useHover","setHover","unsubscribeHover","useAnnotatorUser","_useViewportState","inViewport","setInViewport","viewport","viewportStoreObserver","unsubscribeViewport","ids","_useViewportStateDebounced","useViewportState"],"mappings":"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"}