{"version":3,"file":"annotorious-react.es8.js","sources":["../src/openseadragon/OpenSeadragonAnnotator.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from 'react';\nimport OpenSeadragon from 'openseadragon';\nimport { createOSDAnnotator } from '@annotorious/openseadragon';\nimport { Annotation, AnnotoriousOpts, DrawingStyle, Filter, User} from '@annotorious/annotorious';\nimport { AnnotoriousContext } from '../Annotorious';\n\nexport const OpenSeadragonAnnotatorContext = createContext<{ \n  viewer: OpenSeadragon.Viewer,\n  setViewer(viewer: OpenSeadragon.Viewer): void\n}>({ viewer: null, setViewer: null });\n\nexport type OpenSeadragonAnnotatorProps<I extends Annotation, E extends unknown> = AnnotoriousOpts<I, E> & {\n\n  children?: ReactNode;\n\n  filter?: Filter<I>;\n\n  style?: DrawingStyle | ((annotation: I) => DrawingStyle);\n\n  tool?: string | null;\n\n  user?: User;\n\n}\n\nexport const OpenSeadragonAnnotator = <I extends Annotation, E extends unknown>(props: OpenSeadragonAnnotatorProps<I, E>) => {\n\n  const { children, tool, ...opts } = props;\n\n  const [viewer, setViewer] = useState<OpenSeadragon.Viewer>();\n\n  const { anno, setAnno } = useContext(AnnotoriousContext);\n\n  useEffect(() => {\n    if (viewer?.element) {\n      const anno = createOSDAnnotator<I, E>(viewer, opts as AnnotoriousOpts<I, E>);\n      setAnno(anno);\n\n      return () => {\n        anno.destroy();\n        setAnno(undefined);\n      }\n    }\n  }, [viewer]);\n\n  useEffect(() => {\n    if (anno) anno.setDrawingEnabled(props.drawingEnabled);\n  }, [anno, props.drawingEnabled]);\n\n  useEffect(() => {\n    if (anno) anno.setFilter(props.filter);\n  }, [anno, props.filter]);\n\n  useEffect(() => {\n    if (anno) anno.setStyle(props.style);\n  }, [anno, props.style]);\n\n  useEffect(() => {\n    if (anno) anno.setDrawingTool(tool);\n  }, [anno, tool]);\n\n  useEffect(() => {\n    if (anno) anno.setModalSelect(props.modalSelect);\n  }, [anno, props.modalSelect]);\n\n  useEffect(() => {\n    if (anno) anno.setUser(props.user);\n  }, [anno, props.user]);\n\n  useEffect(() => {\n    if (anno) anno.setUserSelectAction(props.userSelectAction);\n  }, [anno, props.userSelectAction]);\n\n  return (\n    <OpenSeadragonAnnotatorContext.Provider value={{ viewer, setViewer }}>\n      {props.children}\n    </OpenSeadragonAnnotatorContext.Provider>\n  )\n\n}\n\nexport const useViewer = () => {\n  const { viewer } = useContext(OpenSeadragonAnnotatorContext);\n  return viewer;\n}"],"names":["OpenSeadragonAnnotatorContext","createContext","OpenSeadragonAnnotator","props","children","tool","opts","viewer","setViewer","useState","anno","setAnno","useContext","AnnotoriousContext","useEffect","createOSDAnnotator","jsx","useViewer"],"mappings":";;;;AAMO,MAAMA,IAAgCC,EAG1C,EAAE,QAAQ,MAAM,WAAW,KAAM,CAAA,GAgBvBC,IAAyB,CAA0CC,MAA6C;AAE3H,QAAM,EAAE,UAAAC,GAAU,MAAAC,GAAM,GAAGC,EAAS,IAAAH,GAE9B,CAACI,GAAQC,CAAS,IAAIC,EAA+B,GAErD,EAAE,MAAAC,GAAM,SAAAC,MAAYC,EAAWC,CAAkB;AAEvD,SAAAC,EAAU,MAAM;AACd,QAAIP,KAAA,QAAAA,EAAQ,SAAS;AACbG,YAAAA,IAAOK,EAAyBR,GAAQD,CAA6B;AAC3E,aAAAK,EAAQD,CAAI,GAEL,MAAM;AACXA,QAAAA,EAAK,QAAQ,GACbC,EAAQ,MAAS;AAAA,MACnB;AAAA,IAAA;AAAA,EACF,GACC,CAACJ,CAAM,CAAC,GAEXO,EAAU,MAAM;AACd,IAAIJ,KAAMA,EAAK,kBAAkBP,EAAM,cAAc;AAAA,EACpD,GAAA,CAACO,GAAMP,EAAM,cAAc,CAAC,GAE/BW,EAAU,MAAM;AACd,IAAIJ,KAAMA,EAAK,UAAUP,EAAM,MAAM;AAAA,EACpC,GAAA,CAACO,GAAMP,EAAM,MAAM,CAAC,GAEvBW,EAAU,MAAM;AACd,IAAIJ,KAAMA,EAAK,SAASP,EAAM,KAAK;AAAA,EAClC,GAAA,CAACO,GAAMP,EAAM,KAAK,CAAC,GAEtBW,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,eAAeL,CAAI;AAAA,EAAA,GACjC,CAACK,GAAML,CAAI,CAAC,GAEfS,EAAU,MAAM;AACd,IAAIJ,KAAMA,EAAK,eAAeP,EAAM,WAAW;AAAA,EAC9C,GAAA,CAACO,GAAMP,EAAM,WAAW,CAAC,GAE5BW,EAAU,MAAM;AACd,IAAIJ,KAAMA,EAAK,QAAQP,EAAM,IAAI;AAAA,EAChC,GAAA,CAACO,GAAMP,EAAM,IAAI,CAAC,GAErBW,EAAU,MAAM;AACd,IAAIJ,KAAMA,EAAK,oBAAoBP,EAAM,gBAAgB;AAAA,EACxD,GAAA,CAACO,GAAMP,EAAM,gBAAgB,CAAC,GAG/Ba,gBAAAA,MAAChB,EAA8B,UAA9B,EAAuC,OAAO,EAAE,QAAAO,GAAQ,WAAAC,KACtD,UAAAL,EAAM,SACT,CAAA;AAGJ,GAEac,IAAY,MAAM;AAC7B,QAAM,EAAE,QAAAV,EAAA,IAAWK,EAAWZ,CAA6B;AACpD,SAAAO;AACT;"}