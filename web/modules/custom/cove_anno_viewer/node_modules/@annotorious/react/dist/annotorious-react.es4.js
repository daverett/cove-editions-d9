import { j as g } from "./annotorious-react.es11.js";
import { useState as E, useRef as C, useEffect as A } from "react";
import { useFloating as D, FloatingArrow as O } from "./annotorious-react.es13.js";
import { useAnnotator as j, useSelection as L } from "./annotorious-react.es2.js";
import { toClientRects as S } from "./annotorious-react.es14.js";
import { inline as U, offset as F, flip as M, shift as b, arrow as k } from "./annotorious-react.es15.js";
import { autoUpdate as z } from "./annotorious-react.es16.js";
import w from "./annotorious-react.es17.js";
const H = (a, t) => {
  const n = t.querySelector("img"), { left: i, top: d } = n.getBoundingClientRect(), s = n.offsetWidth / n.naturalWidth, c = n.offsetHeight / n.naturalHeight, { minX: o, minY: l, maxX: p, maxY: u } = a.bounds;
  return new DOMRect(
    i + s * o,
    d + c * l,
    s * (p - o),
    c * (u - l)
  );
}, K = (a) => {
  var m, f;
  const t = j(), [n, i] = E(!1), d = C(null), { selected: s, event: c } = L(), o = (m = s[0]) == null ? void 0 : m.annotation, l = (f = s[0]) == null ? void 0 : f.editable, { refs: p, floatingStyles: u, context: h, update: I } = D({
    open: n,
    onOpenChange: i,
    middleware: [
      U(),
      F(10),
      M({ crossAxis: !0 }),
      b({
        crossAxis: !0,
        padding: { right: 5, left: 5, top: 10, bottom: 10 }
      }),
      k({
        element: d,
        padding: 5
      })
    ],
    whileElementsMounted: z
  });
  A(() => {
    if (s.length === 0)
      i(!1);
    else {
      const e = () => {
        const r = H(o.target.selector.geometry, t.element);
        p.setReference({
          getBoundingClientRect: () => r,
          getClientRects: () => S(r)
        });
      };
      return window.addEventListener("scroll", e, !0), window.addEventListener("resize", e), e(), i(!0), () => {
        window.removeEventListener("scroll", e, !0), window.removeEventListener("resize", e);
      };
    }
  }, [t, a.popup, s]);
  const x = (e) => {
    const r = e.id || w();
    t.state.store.addBody({
      ...e,
      id: r,
      annotation: o.id,
      created: e.created || /* @__PURE__ */ new Date(),
      creator: t.getUser()
    });
  }, y = (e) => {
    t.state.store.deleteBody({ id: e, annotation: o.id });
  }, R = (e, r) => {
    const v = r.id || w(), B = {
      updated: /* @__PURE__ */ new Date(),
      updatedBy: t.getUser(),
      ...r,
      id: v,
      annotation: o.id
    };
    t.state.store.updateBody(e, B);
  };
  return n && o ? /* @__PURE__ */ g.jsxs(
    "div",
    {
      className: "a9s-popup a9s-image-popup",
      ref: p.setFloating,
      style: u,
      children: [
        /* @__PURE__ */ g.jsx(
          O,
          {
            ref: d,
            context: h
          }
        ),
        a.popup({
          annotation: o,
          editable: l,
          event: c,
          onCreateBody: x,
          onDeleteBody: y,
          onUpdateBody: R
        })
      ]
    }
  ) : null;
};
export {
  K as ImageAnnotationPopup
};
//# sourceMappingURL=annotorious-react.es4.js.map
