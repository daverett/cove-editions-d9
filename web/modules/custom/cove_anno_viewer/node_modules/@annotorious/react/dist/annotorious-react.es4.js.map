{"version":3,"file":"annotorious-react.es4.js","sources":["../src/ImageAnnotationPopup.tsx"],"sourcesContent":["import { ReactNode, useEffect, useRef, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AnnotationBody, Geometry } from '@annotorious/annotorious';\nimport {\n  useFloating,\n  arrow,\n  shift,\n  inline,\n  autoUpdate,\n  flip,\n  offset,\n  FloatingArrow\n} from '@floating-ui/react';\nimport { useAnnotator, useSelection } from './Annotorious';\nimport { PopupProps } from './PopupProps';\nimport { toClientRects } from './utils/toClientRects';\nimport { ImageAnnotator } from '@annotorious/openseadragon';\n\nconst toDOMRect = (geometry: Geometry, container: HTMLDivElement) => {\n  const img = container.querySelector('img');\n\n  const { left, top } = img.getBoundingClientRect();\n\n  const kx = img.offsetWidth / img.naturalWidth;\n  const ky = img.offsetHeight / img.naturalHeight;\n\n  const { minX, minY, maxX, maxY } = geometry.bounds;\n\n  return new DOMRect(\n    left + kx * minX,\n    top + ky * minY,\n    kx * (maxX - minX),\n    ky * (maxY - minY)\n  );\n}\n\ninterface ImageAnnotationPopupProps {\n\n  arrow?: boolean;\n\n  popup: (props: PopupProps) => ReactNode;\n\n}\n\nexport const ImageAnnotationPopup = (props: ImageAnnotationPopupProps) => {\n\n  const anno = useAnnotator<ImageAnnotator>();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const arrowRef = useRef(null);\n\n  const { selected, event } = useSelection();\n\n  const annotation = selected[0]?.annotation;\n\n  const editable = selected[0]?.editable;\n\n  const { refs, floatingStyles, context, update } = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    middleware: [\n      inline(), \n      offset(10),\n      flip({ crossAxis: true }),\n      shift({ \n        crossAxis: true,\n        padding: { right: 5, left: 5, top: 10, bottom: 10 }\n      }),\n      arrow({\n        element: arrowRef,\n        padding: 5\n      })\n    ],\n    whileElementsMounted: autoUpdate\n  });\n\n  useEffect(() => {\n    if (selected.length === 0) {\n      setIsOpen(false);\n    } else {\n      const setPosition = () => { \n        const rect = toDOMRect(annotation.target.selector.geometry, anno.element);\n\n        refs.setReference({\n          getBoundingClientRect: () => rect,\n          getClientRects: () => toClientRects(rect)\n        });\n      }\n\n      window.addEventListener('scroll', setPosition, true);\n      window.addEventListener('resize', setPosition);\n\n      setPosition();\n\n      setIsOpen(true);\n\n      return () => {\n        window.removeEventListener('scroll', setPosition, true);\n        window.removeEventListener('resize', setPosition);\n      };\n    }\n  }, [anno, props.popup, selected]);\n\n  const onCreateBody = (body: Partial<AnnotationBody>) => {\n    const id = body.id || uuidv4();\n    \n    anno.state.store.addBody({\n      ...body,\n      id,\n      annotation: annotation.id,\n      created: body.created || new Date(),\n      creator: anno.getUser()\n    });\n  }\n\n  const onDeleteBody = (id: string) => {\n    anno.state.store.deleteBody({ id, annotation: annotation.id });\n  }\n\n  const onUpdateBody = (current: AnnotationBody, next: AnnotationBody) => {\n    const id = next.id || uuidv4();\n\n    const updated: AnnotationBody = {\n      updated: new Date(),\n      updatedBy: anno.getUser(),\n      ...next,\n      id,\n      annotation: annotation.id\n    }\n\n    anno.state.store.updateBody(current, updated);\n  }\n\n  return (isOpen && annotation) ? (\n    <div\n      className=\"a9s-popup a9s-image-popup\"\n      ref={refs.setFloating}\n      style={floatingStyles}>\n\n      <FloatingArrow \n        ref={arrowRef} \n        context={context} />\n\n      {props.popup({ \n        annotation, \n        editable, \n        event,\n        onCreateBody,\n        onDeleteBody,\n        onUpdateBody\n      })}\n    </div>\n  ) : null;\n\n}\n"],"names":["toDOMRect","geometry","container","img","left","top","kx","ky","minX","minY","maxX","maxY","ImageAnnotationPopup","props","anno","useAnnotator","isOpen","setIsOpen","useState","arrowRef","useRef","selected","event","useSelection","annotation","_a","editable","_b","refs","floatingStyles","context","update","useFloating","inline","offset","flip","shift","arrow","autoUpdate","useEffect","setPosition","rect","toClientRects","onCreateBody","body","id","uuidv4","onDeleteBody","onUpdateBody","current","next","updated","jsxs","jsx","FloatingArrow"],"mappings":"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"}