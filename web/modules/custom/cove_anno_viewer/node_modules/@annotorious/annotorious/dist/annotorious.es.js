var hn = Object.defineProperty;
var gn = (e, t, n) => t in e ? hn(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var Ze = (e, t, n) => gn(e, typeof t != "symbol" ? t + "" : t, n);
function j() {
}
function ft(e, t) {
  for (const n in t) e[n] = t[n];
  return (
    /** @type {T & S} */
    e
  );
}
function Kt(e) {
  return e();
}
function wt() {
  return /* @__PURE__ */ Object.create(null);
}
function ge(e) {
  e.forEach(Kt);
}
function W(e) {
  return typeof e == "function";
}
function Q(e, t) {
  return e != e ? t == t : e !== t || e && typeof e == "object" || typeof e == "function";
}
function mn(e) {
  return Object.keys(e).length === 0;
}
function Jt(e, ...t) {
  if (e == null) {
    for (const o of t)
      o(void 0);
    return j;
  }
  const n = e.subscribe(...t);
  return n.unsubscribe ? () => n.unsubscribe() : n;
}
function xe(e, t, n) {
  e.$$.on_destroy.push(Jt(t, n));
}
function pn(e, t, n, o) {
  if (e) {
    const i = Qt(e, t, n, o);
    return e[0](i);
  }
}
function Qt(e, t, n, o) {
  return e[1] && o ? ft(n.ctx.slice(), e[1](o(t))) : n.ctx;
}
function yn(e, t, n, o) {
  if (e[2] && o) {
    const i = e[2](o(n));
    if (t.dirty === void 0)
      return i;
    if (typeof i == "object") {
      const s = [], r = Math.max(t.dirty.length, i.length);
      for (let l = 0; l < r; l += 1)
        s[l] = t.dirty[l] | i[l];
      return s;
    }
    return t.dirty | i;
  }
  return t.dirty;
}
function _n(e, t, n, o, i, s) {
  if (i) {
    const r = Qt(t, n, o, s);
    e.p(r, i);
  }
}
function wn(e) {
  if (e.ctx.length > 32) {
    const t = [], n = e.ctx.length / 32;
    for (let o = 0; o < n; o++)
      t[o] = -1;
    return t;
  }
  return -1;
}
function bt(e) {
  const t = {};
  for (const n in e) n[0] !== "$" && (t[n] = e[n]);
  return t;
}
function We(e) {
  return e ?? "";
}
function he(e, t) {
  e.appendChild(t);
}
function B(e, t, n) {
  e.insertBefore(t, n || null);
}
function O(e) {
  e.parentNode && e.parentNode.removeChild(e);
}
function gt(e, t) {
  for (let n = 0; n < e.length; n += 1)
    e[n] && e[n].d(t);
}
function X(e) {
  return document.createElementNS("http://www.w3.org/2000/svg", e);
}
function Zt(e) {
  return document.createTextNode(e);
}
function ie() {
  return Zt(" ");
}
function le() {
  return Zt("");
}
function H(e, t, n, o) {
  return e.addEventListener(t, n, o), () => e.removeEventListener(t, n, o);
}
function d(e, t, n) {
  n == null ? e.removeAttribute(t) : e.getAttribute(t) !== n && e.setAttribute(t, n);
}
function bn(e) {
  return Array.from(e.childNodes);
}
function pe(e, t, n) {
  e.classList.toggle(t, !!n);
}
function En(e, t, { bubbles: n = !1, cancelable: o = !1 } = {}) {
  return new CustomEvent(e, { detail: t, bubbles: n, cancelable: o });
}
let Re;
function Xe(e) {
  Re = e;
}
function xt() {
  if (!Re) throw new Error("Function called outside component initialization");
  return Re;
}
function Ne(e) {
  xt().$$.on_mount.push(e);
}
function ke() {
  const e = xt();
  return (t, n, { cancelable: o = !1 } = {}) => {
    const i = e.$$.callbacks[t];
    if (i) {
      const s = En(
        /** @type {string} */
        t,
        n,
        { cancelable: o }
      );
      return i.slice().forEach((r) => {
        r.call(e, s);
      }), !s.defaultPrevented;
    }
    return !0;
  };
}
function me(e, t) {
  const n = e.$$.callbacks[t.type];
  n && n.slice().forEach((o) => o.call(this, t));
}
const Te = [], qe = [];
let Me = [];
const Et = [], An = /* @__PURE__ */ Promise.resolve();
let ut = !1;
function Sn() {
  ut || (ut = !0, An.then($t));
}
function dt(e) {
  Me.push(e);
}
const $e = /* @__PURE__ */ new Set();
let be = 0;
function $t() {
  if (be !== 0)
    return;
  const e = Re;
  do {
    try {
      for (; be < Te.length; ) {
        const t = Te[be];
        be++, Xe(t), Tn(t.$$);
      }
    } catch (t) {
      throw Te.length = 0, be = 0, t;
    }
    for (Xe(null), Te.length = 0, be = 0; qe.length; ) qe.pop()();
    for (let t = 0; t < Me.length; t += 1) {
      const n = Me[t];
      $e.has(n) || ($e.add(n), n());
    }
    Me.length = 0;
  } while (Te.length);
  for (; Et.length; )
    Et.pop()();
  ut = !1, $e.clear(), Xe(e);
}
function Tn(e) {
  if (e.fragment !== null) {
    e.update(), ge(e.before_update);
    const t = e.dirty;
    e.dirty = [-1], e.fragment && e.fragment.p(e.ctx, t), e.after_update.forEach(dt);
  }
}
function vn(e) {
  const t = [], n = [];
  Me.forEach((o) => e.indexOf(o) === -1 ? t.push(o) : n.push(o)), n.forEach((o) => o()), Me = t;
}
const He = /* @__PURE__ */ new Set();
let we;
function se() {
  we = {
    r: 0,
    c: [],
    p: we
    // parent group
  };
}
function re() {
  we.r || ge(we.c), we = we.p;
}
function Y(e, t) {
  e && e.i && (He.delete(e), e.i(t));
}
function C(e, t, n, o) {
  if (e && e.o) {
    if (He.has(e)) return;
    He.add(e), we.c.push(() => {
      He.delete(e), o && (n && e.d(1), o());
    }), e.o(t);
  } else o && o();
}
function Le(e) {
  return (e == null ? void 0 : e.length) !== void 0 ? e : Array.from(e);
}
function ee(e) {
  e && e.c();
}
function x(e, t, n) {
  const { fragment: o, after_update: i } = e.$$;
  o && o.m(t, n), dt(() => {
    const s = e.$$.on_mount.map(Kt).filter(W);
    e.$$.on_destroy ? e.$$.on_destroy.push(...s) : ge(s), e.$$.on_mount = [];
  }), i.forEach(dt);
}
function $(e, t) {
  const n = e.$$;
  n.fragment !== null && (vn(n.after_update), ge(n.on_destroy), n.fragment && n.fragment.d(t), n.on_destroy = n.fragment = null, n.ctx = []);
}
function Mn(e, t) {
  e.$$.dirty[0] === -1 && (Te.push(e), Sn(), e.$$.dirty.fill(0)), e.$$.dirty[t / 31 | 0] |= 1 << t % 31;
}
function te(e, t, n, o, i, s, r = null, l = [-1]) {
  const a = Re;
  Xe(e);
  const c = e.$$ = {
    fragment: null,
    ctx: [],
    // state
    props: s,
    update: j,
    not_equal: i,
    bound: wt(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(t.context || (a ? a.$$.context : [])),
    // everything else
    callbacks: wt(),
    dirty: l,
    skip_bound: !1,
    root: t.target || a.$$.root
  };
  r && r(c.root);
  let u = !1;
  if (c.ctx = n ? n(e, t.props || {}, (f, h, ...g) => {
    const m = g.length ? g[0] : h;
    return c.ctx && i(c.ctx[f], c.ctx[f] = m) && (!c.skip_bound && c.bound[f] && c.bound[f](m), u && Mn(e, f)), h;
  }) : [], c.update(), u = !0, ge(c.before_update), c.fragment = o ? o(c.ctx) : !1, t.target) {
    if (t.hydrate) {
      const f = bn(t.target);
      c.fragment && c.fragment.l(f), f.forEach(O);
    } else
      c.fragment && c.fragment.c();
    t.intro && Y(e.$$.fragment), x(e, t.target, t.anchor), $t();
  }
  Xe(a);
}
class ne {
  constructor() {
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    Ze(this, "$$");
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    Ze(this, "$$set");
  }
  /** @returns {void} */
  $destroy() {
    $(this, 1), this.$destroy = j;
  }
  /**
   * @template {Extract<keyof Events, string>} K
   * @param {K} type
   * @param {((e: Events[K]) => void) | null | undefined} callback
   * @returns {() => void}
   */
  $on(t, n) {
    if (!W(n))
      return j;
    const o = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);
    return o.push(n), () => {
      const i = o.indexOf(n);
      i !== -1 && o.splice(i, 1);
    };
  }
  /**
   * @param {Partial<Props>} props
   * @returns {void}
   */
  $set(t) {
    this.$$set && !mn(t) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1);
  }
}
const Ln = "4";
typeof window < "u" && (window.__svelte || (window.__svelte = { v: /* @__PURE__ */ new Set() })).v.add(Ln);
var F = /* @__PURE__ */ ((e) => (e.ELLIPSE = "ELLIPSE", e.POLYGON = "POLYGON", e.RECTANGLE = "RECTANGLE", e))(F || {});
const mt = {}, pt = (e, t) => mt[e] = t, ht = (e) => mt[e.type].area(e), kn = (e, t, n) => mt[e.type].intersects(e, t, n), Ke = (e) => {
  let t = 1 / 0, n = 1 / 0, o = -1 / 0, i = -1 / 0;
  return e.forEach(([s, r]) => {
    t = Math.min(t, s), n = Math.min(n, r), o = Math.max(o, s), i = Math.max(i, r);
  }), { minX: t, minY: n, maxX: o, maxY: i };
}, In = {
  area: (e) => Math.PI * e.geometry.rx * e.geometry.ry,
  intersects: (e, t, n) => {
    const { cx: o, cy: i, rx: s, ry: r } = e.geometry, l = 0, a = Math.cos(l), c = Math.sin(l), u = t - o, f = n - i, h = a * u + c * f, g = c * u - a * f;
    return h * h / (s * s) + g * g / (r * r) <= 1;
  }
};
pt(F.ELLIPSE, In);
const On = {
  area: (e) => {
    const { points: t } = e.geometry;
    let n = 0, o = t.length - 1;
    for (let i = 0; i < t.length; i++)
      n += (t[o][0] + t[i][0]) * (t[o][1] - t[i][1]), o = i;
    return Math.abs(0.5 * n);
  },
  intersects: (e, t, n) => {
    const { points: o } = e.geometry;
    let i = !1;
    for (let s = 0, r = o.length - 1; s < o.length; r = s++) {
      const l = o[s][0], a = o[s][1], c = o[r][0], u = o[r][1];
      a > n != u > n && t < (c - l) * (n - a) / (u - a) + l && (i = !i);
    }
    return i;
  }
};
pt(F.POLYGON, On);
const Bn = {
  area: (e) => e.geometry.w * e.geometry.h,
  intersects: (e, t, n) => t >= e.geometry.x && t <= e.geometry.x + e.geometry.w && n >= e.geometry.y && n <= e.geometry.y + e.geometry.h
};
pt(F.RECTANGLE, Bn);
const Je = (e) => Fe(e.target), Fe = (e) => {
  var t, n;
  return (e == null ? void 0 : e.annotation) !== void 0 && ((n = (t = e == null ? void 0 : e.selector) == null ? void 0 : t.geometry) == null ? void 0 : n.bounds) !== void 0;
}, Dn = (e, t = !1) => {
  const n = typeof e == "string" ? e : e.value, o = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g, i = [...n.matchAll(o)][0], [s, r, l, a, c, u, f] = i;
  if (r !== "xywh") throw new Error("Unsupported MediaFragment: " + n);
  if (l && l !== "pixel") throw new Error(`Unsupported MediaFragment unit: ${l}`);
  const [h, g, m, w] = [a, c, u, f].map(parseFloat);
  return {
    type: F.RECTANGLE,
    geometry: {
      x: h,
      y: g,
      w: m,
      h: w,
      bounds: {
        minX: h,
        minY: t ? g - w : g,
        maxX: h + m,
        maxY: t ? g : g + w
      }
    }
  };
}, Yn = (e) => {
  const { x: t, y: n, w: o, h: i } = e;
  return {
    type: "FragmentSelector",
    conformsTo: "http://www.w3.org/TR/media-frags/",
    value: `xywh=pixel:${t},${n},${o},${i}`
  };
}, en = "http://www.w3.org/2000/svg", At = (e) => {
  const t = (o) => {
    Array.from(o.attributes).forEach((i) => {
      i.name.startsWith("on") && o.removeAttribute(i.name);
    });
  }, n = e.getElementsByTagName("script");
  return Array.from(n).reverse().forEach((o) => o.parentNode.removeChild(o)), Array.from(e.querySelectorAll("*")).forEach(t), e;
}, Pn = (e) => {
  const o = new XMLSerializer().serializeToString(e.documentElement).replace("<svg>", `<svg xmlns="${en}">`);
  return new DOMParser().parseFromString(o, "image/svg+xml").documentElement;
}, Cn = (e) => {
  const n = new DOMParser().parseFromString(e, "image/svg+xml"), o = n.lookupPrefix(en), i = n.lookupNamespaceURI(null);
  return o || i ? At(n).firstChild : At(Pn(n)).firstChild;
}, Xn = (e) => {
  const [t, n, o] = e.match(/(<polygon points=["|'])([^("|')]*)/) || [], i = o.split(" ").map((s) => s.split(",").map(parseFloat));
  return {
    type: F.POLYGON,
    geometry: {
      points: i,
      bounds: Ke(i)
    }
  };
}, Rn = (e) => {
  const t = Cn(e), n = parseFloat(t.getAttribute("cx")), o = parseFloat(t.getAttribute("cy")), i = parseFloat(t.getAttribute("rx")), s = parseFloat(t.getAttribute("ry")), r = {
    minX: n - i,
    minY: o - s,
    maxX: n + i,
    maxY: o + s
  };
  return {
    type: F.ELLIPSE,
    geometry: {
      cx: n,
      cy: o,
      rx: i,
      ry: s,
      bounds: r
    }
  };
}, Nn = (e) => {
  const t = typeof e == "string" ? e : e.value;
  if (t.includes("<polygon points="))
    return Xn(t);
  if (t.includes("<ellipse "))
    return Rn(t);
  throw "Unsupported SVG shape: " + t;
}, Un = (e) => {
  let t;
  if (e.type === F.POLYGON) {
    const n = e.geometry, { points: o } = n;
    t = `<svg><polygon points="${o.map((i) => i.join(",")).join(" ")}" /></svg>`;
  } else if (e.type === F.ELLIPSE) {
    const n = e.geometry;
    t = `<svg><ellipse cx="${n.cx}" cy="${n.cy}" rx="${n.rx}" ry="${n.ry}" /></svg>`;
  }
  if (t)
    return { type: "SvgSelector", value: t };
  throw `Unsupported shape type: ${e.type}`;
}, q = [];
for (let e = 0; e < 256; ++e)
  q.push((e + 256).toString(16).slice(1));
function Vn(e, t = 0) {
  return (q[e[t + 0]] + q[e[t + 1]] + q[e[t + 2]] + q[e[t + 3]] + "-" + q[e[t + 4]] + q[e[t + 5]] + "-" + q[e[t + 6]] + q[e[t + 7]] + "-" + q[e[t + 8]] + q[e[t + 9]] + "-" + q[e[t + 10]] + q[e[t + 11]] + q[e[t + 12]] + q[e[t + 13]] + q[e[t + 14]] + q[e[t + 15]]).toLowerCase();
}
let et;
const Gn = new Uint8Array(16);
function jn() {
  if (!et) {
    if (typeof crypto > "u" || !crypto.getRandomValues)
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    et = crypto.getRandomValues.bind(crypto);
  }
  return et(Gn);
}
const zn = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), St = { randomUUID: zn };
function tn(e, t, n) {
  if (St.randomUUID && !t && !e)
    return St.randomUUID();
  e = e || {};
  const o = e.random || (e.rng || jn)();
  return o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, Vn(o);
}
var Tt = Object.prototype.hasOwnProperty;
function ye(e, t) {
  var n, o;
  if (e === t) return !0;
  if (e && t && (n = e.constructor) === t.constructor) {
    if (n === Date) return e.getTime() === t.getTime();
    if (n === RegExp) return e.toString() === t.toString();
    if (n === Array) {
      if ((o = e.length) === t.length)
        for (; o-- && ye(e[o], t[o]); ) ;
      return o === -1;
    }
    if (!n || typeof e == "object") {
      o = 0;
      for (n in e)
        if (Tt.call(e, n) && ++o && !Tt.call(t, n) || !(n in t) || !ye(e[n], t[n])) return !1;
      return Object.keys(t).length === o;
    }
  }
  return e !== e && t !== t;
}
function tt() {
}
function Hn(e, t) {
  return e != e ? t == t : e !== t || e && typeof e == "object" || typeof e == "function";
}
const Ee = [];
function yt(e, t = tt) {
  let n;
  const o = /* @__PURE__ */ new Set();
  function i(l) {
    if (Hn(e, l) && (e = l, n)) {
      const a = !Ee.length;
      for (const c of o)
        c[1](), Ee.push(c, e);
      if (a) {
        for (let c = 0; c < Ee.length; c += 2)
          Ee[c][0](Ee[c + 1]);
        Ee.length = 0;
      }
    }
  }
  function s(l) {
    i(l(e));
  }
  function r(l, a = tt) {
    const c = [l, a];
    return o.add(c), o.size === 1 && (n = t(i, s) || tt), l(e), () => {
      o.delete(c), o.size === 0 && n && (n(), n = null);
    };
  }
  return { set: i, update: s, subscribe: r };
}
const Fn = (e) => {
  const { subscribe: t, set: n } = yt();
  let o;
  return t((i) => o = i), e.observe(({ changes: i }) => {
    if (o) {
      (i.deleted || []).some((r) => r.id === o) && n(void 0);
      const s = (i.updated || []).find(({ oldValue: r }) => r.id === o);
      s && n(s.newValue.id);
    }
  }), {
    get current() {
      return o;
    },
    subscribe: t,
    set: n
  };
};
var nn = /* @__PURE__ */ ((e) => (e.EDIT = "EDIT", e.SELECT = "SELECT", e.NONE = "NONE", e))(nn || {});
const Ge = { selected: [] }, Wn = (e, t, n) => {
  const { subscribe: o, set: i } = yt(Ge);
  let s = t, r = Ge;
  o((m) => r = m);
  const l = () => {
    ye(r, Ge) || i(Ge);
  }, a = () => {
    var m;
    return ((m = r.selected) == null ? void 0 : m.length) === 0;
  }, c = (m) => {
    if (a())
      return !1;
    const w = typeof m == "string" ? m : m.id;
    return r.selected.some((T) => T.id === w);
  }, u = (m, w) => {
    let T;
    if (Array.isArray(m)) {
      if (T = m.map((p) => e.getAnnotation(p)).filter(Boolean), T.length < m.length) {
        console.warn("Invalid selection: " + m.filter((p) => !T.some((_) => _.id === p)));
        return;
      }
    } else {
      const p = e.getAnnotation(m);
      if (!p) {
        console.warn("Invalid selection: " + m);
        return;
      }
      T = [p];
    }
    const y = T.reduce((p, _) => {
      const E = vt(_, s, n);
      return E === "EDIT" ? [...p, { id: _.id, editable: !0 }] : E === "SELECT" ? [...p, { id: _.id }] : p;
    }, []);
    i({ selected: y, event: w });
  }, f = (m, w) => {
    const T = Array.isArray(m) ? m : [m], y = T.map((p) => e.getAnnotation(p)).filter((p) => !!p);
    i({
      selected: y.map((p) => {
        const _ = w === void 0 ? vt(p, s, n) === "EDIT" : w;
        return { id: p.id, editable: _ };
      })
    }), y.length !== T.length && console.warn("Invalid selection", m);
  }, h = (m) => {
    if (a())
      return !1;
    const { selected: w } = r;
    w.some(({ id: T }) => m.includes(T)) && i({ selected: w.filter(({ id: T }) => !m.includes(T)) });
  }, g = (m) => s = m;
  return e.observe(
    ({ changes: m }) => h((m.deleted || []).map((w) => w.id))
  ), {
    get event() {
      return r ? r.event : null;
    },
    get selected() {
      return r ? [...r.selected] : null;
    },
    get userSelectAction() {
      return s;
    },
    clear: l,
    isEmpty: a,
    isSelected: c,
    setSelected: f,
    setUserSelectAction: g,
    subscribe: o,
    userSelect: u
  };
}, vt = (e, t, n) => {
  const o = n ? n.serialize(e) : e;
  return typeof t == "function" ? t(o) : t || "EDIT";
}, K = [];
for (let e = 0; e < 256; ++e)
  K.push((e + 256).toString(16).slice(1));
function qn(e, t = 0) {
  return (K[e[t + 0]] + K[e[t + 1]] + K[e[t + 2]] + K[e[t + 3]] + "-" + K[e[t + 4]] + K[e[t + 5]] + "-" + K[e[t + 6]] + K[e[t + 7]] + "-" + K[e[t + 8]] + K[e[t + 9]] + "-" + K[e[t + 10]] + K[e[t + 11]] + K[e[t + 12]] + K[e[t + 13]] + K[e[t + 14]] + K[e[t + 15]]).toLowerCase();
}
let nt;
const Kn = new Uint8Array(16);
function Jn() {
  if (!nt) {
    if (typeof crypto > "u" || !crypto.getRandomValues)
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    nt = crypto.getRandomValues.bind(crypto);
  }
  return nt(Kn);
}
const Qn = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), Mt = { randomUUID: Qn };
function on(e, t, n) {
  if (Mt.randomUUID && !t && !e)
    return Mt.randomUUID();
  e = e || {};
  const o = e.random || (e.rng || Jn)();
  return o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, qn(o);
}
const ot = (e) => {
  const t = (n) => {
    const o = { ...n };
    return n.created && typeof n.created == "string" && (o.created = new Date(n.created)), n.updated && typeof n.updated == "string" && (o.updated = new Date(n.updated)), o;
  };
  return {
    ...e,
    bodies: (e.bodies || []).map(t),
    target: t(e.target)
  };
}, zi = (e, t, n, o) => ({
  id: on(),
  annotation: typeof e == "string" ? e : e.id,
  created: n || /* @__PURE__ */ new Date(),
  creator: o,
  ...t
}), Zn = (e, t) => {
  const n = new Set(e.bodies.map((o) => o.id));
  return t.bodies.filter((o) => !n.has(o.id));
}, xn = (e, t) => {
  const n = new Set(t.bodies.map((o) => o.id));
  return e.bodies.filter((o) => !n.has(o.id));
}, $n = (e, t) => t.bodies.map((n) => {
  const o = e.bodies.find((i) => i.id === n.id);
  return { newBody: n, oldBody: o && !ye(o, n) ? o : void 0 };
}).filter(({ oldBody: n }) => n).map(({ oldBody: n, newBody: o }) => ({ oldBody: n, newBody: o })), eo = (e, t) => !ye(e.target, t.target), sn = (e, t) => {
  const n = Zn(e, t), o = xn(e, t), i = $n(e, t);
  return {
    oldValue: e,
    newValue: t,
    bodiesCreated: n.length > 0 ? n : void 0,
    bodiesDeleted: o.length > 0 ? o : void 0,
    bodiesUpdated: i.length > 0 ? i : void 0,
    targetUpdated: eo(e, t) ? { oldTarget: e.target, newTarget: t.target } : void 0
  };
};
var G = /* @__PURE__ */ ((e) => (e.LOCAL = "LOCAL", e.REMOTE = "REMOTE", e.SILENT = "SILENT", e))(G || {});
const to = (e, t) => {
  var n, o;
  const { changes: i, origin: s } = t;
  if (!(e.options.origin ? e.options.origin === s : s !== "SILENT"))
    return !1;
  if (e.options.ignore) {
    const { ignore: r } = e.options, l = (a) => a && a.length > 0;
    if (!(l(i.created) || l(i.deleted))) {
      const a = (n = i.updated) == null ? void 0 : n.some((u) => l(u.bodiesCreated) || l(u.bodiesDeleted) || l(u.bodiesUpdated)), c = (o = i.updated) == null ? void 0 : o.some((u) => u.targetUpdated);
      if (r === "BODY_ONLY" && a && !c || r === "TARGET_ONLY" && c && !a)
        return !1;
    }
  }
  if (e.options.annotations) {
    const r = /* @__PURE__ */ new Set([
      ...(i.created || []).map((l) => l.id),
      ...(i.deleted || []).map((l) => l.id),
      ...(i.updated || []).map(({ oldValue: l }) => l.id)
    ]);
    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((l) => r.has(l));
  } else
    return !0;
}, no = (e, t) => {
  const n = new Set((e.created || []).map((f) => f.id)), o = new Set((e.updated || []).map(({ newValue: f }) => f.id)), i = new Set((t.created || []).map((f) => f.id)), s = new Set((t.deleted || []).map((f) => f.id)), r = new Set((t.updated || []).map(({ oldValue: f }) => f.id)), l = new Set((t.updated || []).filter(({ oldValue: f }) => n.has(f.id) || o.has(f.id)).map(({ oldValue: f }) => f.id)), a = [
    ...(e.created || []).filter((f) => !s.has(f.id)).map((f) => r.has(f.id) ? t.updated.find(({ oldValue: h }) => h.id === f.id).newValue : f),
    ...t.created || []
  ], c = [
    ...(e.deleted || []).filter((f) => !i.has(f.id)),
    ...(t.deleted || []).filter((f) => !n.has(f.id))
  ], u = [
    ...(e.updated || []).filter(({ newValue: f }) => !s.has(f.id)).map((f) => {
      const { oldValue: h, newValue: g } = f;
      if (r.has(g.id)) {
        const m = t.updated.find((w) => w.oldValue.id === g.id).newValue;
        return sn(h, m);
      } else
        return f;
    }),
    ...(t.updated || []).filter(({ oldValue: f }) => !l.has(f.id))
  ];
  return { created: a, deleted: c, updated: u };
}, it = (e) => {
  const t = e.id === void 0 ? on() : e.id;
  return {
    ...e,
    id: t,
    bodies: e.bodies === void 0 ? [] : e.bodies.map((n) => ({
      ...n,
      annotation: t
    })),
    target: {
      ...e.target,
      annotation: t
    }
  };
}, oo = (e) => e.id !== void 0, io = () => {
  const e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Map(), n = [], o = (A, S = {}) => {
    n.push({ onChange: A, options: S });
  }, i = (A) => {
    const S = n.findIndex((b) => b.onChange == A);
    S > -1 && n.splice(S, 1);
  }, s = (A, S) => {
    const b = {
      origin: A,
      changes: {
        created: S.created || [],
        updated: S.updated || [],
        deleted: S.deleted || []
      },
      state: [...e.values()]
    };
    n.forEach((v) => {
      to(v, b) && v.onChange(b);
    });
  }, r = (A, S = G.LOCAL) => {
    if (A.id && e.get(A.id))
      throw Error(`Cannot add annotation ${A.id} - exists already`);
    {
      const b = it(A);
      e.set(b.id, b), b.bodies.forEach((v) => t.set(v.id, b.id)), s(S, { created: [b] });
    }
  }, l = (A, S) => {
    const b = it(typeof A == "string" ? S : A), v = typeof A == "string" ? A : A.id, P = v && e.get(v);
    if (P) {
      const D = sn(P, b);
      return v === b.id ? e.set(v, b) : (e.delete(v), e.set(b.id, b)), P.bodies.forEach((z) => t.delete(z.id)), b.bodies.forEach((z) => t.set(z.id, b.id)), D;
    } else
      console.warn(`Cannot update annotation ${v} - does not exist`);
  }, a = (A, S = G.LOCAL, b = G.LOCAL) => {
    const v = oo(S) ? b : S, P = l(A, S);
    P && s(v, { updated: [P] });
  }, c = (A, S = G.LOCAL) => {
    const b = A.reduce((v, P) => {
      const D = l(P);
      return D ? [...v, D] : v;
    }, []);
    b.length > 0 && s(S, { updated: b });
  }, u = (A, S = G.LOCAL) => {
    const b = e.get(A.annotation);
    if (b) {
      const v = {
        ...b,
        bodies: [...b.bodies, A]
      };
      e.set(b.id, v), t.set(A.id, v.id), s(S, { updated: [{
        oldValue: b,
        newValue: v,
        bodiesCreated: [A]
      }] });
    } else
      console.warn(`Attempt to add body to missing annotation: ${A.annotation}`);
  }, f = () => [...e.values()], h = (A = G.LOCAL) => {
    const S = [...e.values()];
    e.clear(), t.clear(), s(A, { deleted: S });
  }, g = (A, S = !0, b = G.LOCAL) => {
    const v = A.map(it);
    if (S) {
      const P = [...e.values()];
      e.clear(), t.clear(), v.forEach((D) => {
        e.set(D.id, D), D.bodies.forEach((z) => t.set(z.id, D.id));
      }), s(b, { created: v, deleted: P });
    } else {
      const P = A.reduce((D, z) => {
        const oe = z.id && e.get(z.id);
        return oe ? [...D, oe] : D;
      }, []);
      if (P.length > 0)
        throw Error(`Bulk insert would overwrite the following annotations: ${P.map((D) => D.id).join(", ")}`);
      v.forEach((D) => {
        e.set(D.id, D), D.bodies.forEach((z) => t.set(z.id, D.id));
      }), s(b, { created: v });
    }
  }, m = (A) => {
    const S = typeof A == "string" ? A : A.id, b = e.get(S);
    if (b)
      return e.delete(S), b.bodies.forEach((v) => t.delete(v.id)), b;
    console.warn(`Attempt to delete missing annotation: ${S}`);
  }, w = (A, S = G.LOCAL) => {
    const b = m(A);
    b && s(S, { deleted: [b] });
  }, T = (A, S = G.LOCAL) => {
    const b = A.reduce((v, P) => {
      const D = m(P);
      return D ? [...v, D] : v;
    }, []);
    b.length > 0 && s(S, { deleted: b });
  }, y = (A) => {
    const S = e.get(A.annotation);
    if (S) {
      const b = S.bodies.find((v) => v.id === A.id);
      if (b) {
        t.delete(b.id);
        const v = {
          ...S,
          bodies: S.bodies.filter((P) => P.id !== A.id)
        };
        return e.set(S.id, v), {
          oldValue: S,
          newValue: v,
          bodiesDeleted: [b]
        };
      } else
        console.warn(`Attempt to delete missing body ${A.id} from annotation ${A.annotation}`);
    } else
      console.warn(`Attempt to delete body from missing annotation ${A.annotation}`);
  }, p = (A, S = G.LOCAL) => {
    const b = y(A);
    b && s(S, { updated: [b] });
  }, _ = (A, S = G.LOCAL) => {
    const b = A.map((v) => y(v)).filter(Boolean);
    b.length > 0 && s(S, { updated: b });
  }, E = (A) => {
    const S = e.get(A);
    return S ? { ...S } : void 0;
  }, I = (A) => {
    const S = t.get(A);
    if (S) {
      const b = E(S).bodies.find((v) => v.id === A);
      if (b)
        return b;
      console.error(`Store integrity error: body ${A} in index, but not in annotation`);
    } else
      console.warn(`Attempt to retrieve missing body: ${A}`);
  }, R = (A, S) => {
    if (A.annotation !== S.annotation)
      throw "Annotation integrity violation: annotation ID must be the same when updating bodies";
    const b = e.get(A.annotation);
    if (b) {
      const v = b.bodies.find((D) => D.id === A.id), P = {
        ...b,
        bodies: b.bodies.map((D) => D.id === v.id ? S : D)
      };
      return e.set(b.id, P), v.id !== S.id && (t.delete(v.id), t.set(S.id, P.id)), {
        oldValue: b,
        newValue: P,
        bodiesUpdated: [{ oldBody: v, newBody: S }]
      };
    } else
      console.warn(`Attempt to add body to missing annotation ${A.annotation}`);
  }, U = (A, S, b = G.LOCAL) => {
    const v = R(A, S);
    v && s(b, { updated: [v] });
  }, V = (A, S = G.LOCAL) => {
    const b = A.map((v) => R({ id: v.id, annotation: v.annotation }, v)).filter(Boolean);
    s(S, { updated: b });
  }, Z = (A) => {
    const S = e.get(A.annotation);
    if (S) {
      const b = {
        ...S,
        target: {
          ...S.target,
          ...A
        }
      };
      return e.set(S.id, b), {
        oldValue: S,
        newValue: b,
        targetUpdated: {
          oldTarget: S.target,
          newTarget: A
        }
      };
    } else
      console.warn(`Attempt to update target on missing annotation: ${A.annotation}`);
  };
  return {
    addAnnotation: r,
    addBody: u,
    all: f,
    bulkAddAnnotation: g,
    bulkDeleteAnnotation: T,
    bulkDeleteBodies: _,
    bulkUpdateAnnotation: c,
    bulkUpdateBodies: V,
    bulkUpdateTargets: (A, S = G.LOCAL) => {
      const b = A.map((v) => Z(v)).filter(Boolean);
      b.length > 0 && s(S, { updated: b });
    },
    clear: h,
    deleteAnnotation: w,
    deleteBody: p,
    getAnnotation: E,
    getBody: I,
    observe: o,
    unobserve: i,
    updateAnnotation: a,
    updateBody: U,
    updateTarget: (A, S = G.LOCAL) => {
      const b = Z(A);
      b && s(S, { updated: [b] });
    }
  };
}, so = (e) => ({
  ...e,
  subscribe: (t) => {
    const n = (o) => t(o.state);
    return e.observe(n), t(e.all()), () => e.unobserve(n);
  }
});
let ro = () => ({
  emit(e, ...t) {
    for (let n = this.events[e] || [], o = 0, i = n.length; o < i; o++)
      n[o](...t);
  },
  events: {},
  on(e, t) {
    var n;
    return ((n = this.events)[e] || (n[e] = [])).push(t), () => {
      var o;
      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => t !== i);
    };
  }
});
const lo = 250, ao = (e) => {
  const t = ro(), n = [];
  let o = -1, i = !1, s = 0;
  const r = (g) => {
    if (!i) {
      const { changes: m } = g, w = performance.now();
      if (w - s > lo)
        n.splice(o + 1), n.push(m), o = n.length - 1;
      else {
        const T = n.length - 1;
        n[T] = no(n[T], m);
      }
      s = w;
    }
    i = !1;
  };
  e.observe(r, { origin: G.LOCAL });
  const l = (g) => g && g.length > 0 && e.bulkDeleteAnnotation(g), a = (g) => g && g.length > 0 && e.bulkAddAnnotation(g, !1), c = (g) => g && g.length > 0 && e.bulkUpdateAnnotation(g.map(({ oldValue: m }) => m)), u = (g) => g && g.length > 0 && e.bulkUpdateAnnotation(g.map(({ newValue: m }) => m)), f = (g) => g && g.length > 0 && e.bulkAddAnnotation(g, !1), h = (g) => g && g.length > 0 && e.bulkDeleteAnnotation(g);
  return {
    canRedo: () => n.length - 1 > o,
    canUndo: () => o > -1,
    destroy: () => e.unobserve(r),
    on: (g, m) => t.on(g, m),
    redo: () => {
      if (n.length - 1 > o) {
        i = !0;
        const { created: g, updated: m, deleted: w } = n[o + 1];
        a(g), u(m), h(w), t.emit("redo", n[o + 1]), o += 1;
      }
    },
    undo: () => {
      if (o > -1) {
        i = !0;
        const { created: g, updated: m, deleted: w } = n[o];
        l(g), c(m), f(w), t.emit("undo", n[o]), o -= 1;
      }
    }
  };
}, co = () => {
  const { subscribe: e, set: t } = yt([]);
  return {
    subscribe: e,
    set: t
  };
}, fo = (e, t, n, o) => {
  const { hover: i, selection: s, store: r, viewport: l } = e, a = /* @__PURE__ */ new Map();
  let c = [], u, f;
  const h = (y, p) => {
    a.has(y) ? a.get(y).push(p) : a.set(y, [p]);
  }, g = (y, p) => {
    const _ = a.get(y);
    if (_) {
      const E = _.indexOf(p);
      E !== -1 && _.splice(E, 1);
    }
  }, m = (y, p, _) => {
    a.has(y) && setTimeout(() => {
      a.get(y).forEach((E) => {
        if (n) {
          const I = Array.isArray(p) ? p.map((U) => n.serialize(U)) : n.serialize(p), R = _ ? _ instanceof PointerEvent ? _ : n.serialize(_) : void 0;
          E(I, R);
        } else
          E(p, _);
      });
    }, 1);
  }, w = () => {
    const { selected: y } = s, p = (y || []).map(({ id: _ }) => r.getAnnotation(_));
    p.forEach((_) => {
      const E = c.find((I) => I.id === _.id);
      (!E || !ye(E, _)) && m("updateAnnotation", _, E);
    }), c = c.map((_) => p.find(({ id: I }) => I === _.id) || _);
  };
  s.subscribe(({ selected: y }) => {
    if (!(c.length === 0 && y.length === 0)) {
      if (c.length === 0 && y.length > 0)
        c = y.map(({ id: p }) => r.getAnnotation(p));
      else if (c.length > 0 && y.length === 0)
        c.forEach((p) => {
          const _ = r.getAnnotation(p.id);
          _ && !ye(_, p) && m("updateAnnotation", _, p);
        }), c = [];
      else {
        const p = new Set(c.map((E) => E.id)), _ = new Set(y.map(({ id: E }) => E));
        c.filter((E) => !_.has(E.id)).forEach((E) => {
          const I = r.getAnnotation(E.id);
          I && !ye(I, E) && m("updateAnnotation", I, E);
        }), c = [
          // Remove annotations that were deselected
          ...c.filter((E) => _.has(E.id)),
          // Add editable annotations that were selected
          ...y.filter(({ id: E }) => !p.has(E)).map(({ id: E }) => r.getAnnotation(E))
        ];
      }
      m("selectionChanged", c);
    }
  }), i.subscribe((y) => {
    !u && y ? m("mouseEnterAnnotation", r.getAnnotation(y)) : u && !y ? m("mouseLeaveAnnotation", r.getAnnotation(u)) : u && y && (m("mouseLeaveAnnotation", r.getAnnotation(u)), m("mouseEnterAnnotation", r.getAnnotation(y))), u = y;
  }), l == null || l.subscribe((y) => m("viewportIntersect", y.map((p) => r.getAnnotation(p)))), r.observe((y) => {
    o && (f && clearTimeout(f), f = setTimeout(w, 1e3));
    const { created: p, deleted: _ } = y.changes;
    (p || []).forEach((E) => m("createAnnotation", E)), (_ || []).forEach((E) => m("deleteAnnotation", E)), (y.changes.updated || []).filter((E) => [
      ...E.bodiesCreated || [],
      ...E.bodiesDeleted || [],
      ...E.bodiesUpdated || []
    ].length > 0).forEach(({ oldValue: E, newValue: I }) => {
      const R = c.find((U) => U.id === E.id) || E;
      c = c.map((U) => U.id === E.id ? I : U), m("updateAnnotation", I, R);
    });
  }, { origin: G.LOCAL }), r.observe((y) => {
    if (c) {
      const p = new Set(c.map((E) => E.id)), _ = (y.changes.updated || []).filter(({ newValue: E }) => p.has(E.id)).map(({ newValue: E }) => E);
      _.length > 0 && (c = c.map((E) => _.find((R) => R.id === E.id) || E));
    }
  }, { origin: G.REMOTE });
  const T = (y) => (p) => {
    const { updated: _ } = p;
    y ? (_ || []).forEach((E) => m("updateAnnotation", E.oldValue, E.newValue)) : (_ || []).forEach((E) => m("updateAnnotation", E.newValue, E.oldValue));
  };
  return t.on("undo", T(!0)), t.on("redo", T(!1)), { on: h, off: g, emit: m };
}, uo = (e) => (t) => t.reduce((n, o) => {
  const { parsed: i, error: s } = e.parse(o);
  return s ? {
    parsed: n.parsed,
    failed: [...n.failed, o]
  } : i ? {
    parsed: [...n.parsed, i],
    failed: n.failed
  } : {
    ...n
  };
}, { parsed: [], failed: [] }), ho = (e, t, n) => {
  const { store: o, selection: i } = e, s = (y) => {
    if (n) {
      const { parsed: p, error: _ } = n.parse(y);
      p ? o.addAnnotation(p, G.REMOTE) : console.error(_);
    } else
      o.addAnnotation(ot(y), G.REMOTE);
  }, r = () => i.clear(), l = () => o.clear(), a = (y) => {
    const p = o.getAnnotation(y);
    return n && p ? n.serialize(p) : p;
  }, c = () => n ? o.all().map(n.serialize) : o.all(), u = () => {
    var y;
    const p = (((y = i.selected) == null ? void 0 : y.map((_) => _.id)) || []).map((_) => o.getAnnotation(_)).filter(Boolean);
    return n ? p.map(n.serialize) : p;
  }, f = (y, p = !0) => fetch(y).then((_) => _.json()).then((_) => (g(_, p), _)), h = (y) => {
    if (typeof y == "string") {
      const p = o.getAnnotation(y);
      if (o.deleteAnnotation(y), p)
        return n ? n.serialize(p) : p;
    } else {
      const p = n ? n.parse(y).parsed : y;
      if (p)
        return o.deleteAnnotation(p), y;
    }
  }, g = (y, p = !0) => {
    if (n) {
      const _ = n.parseAll || uo(n), { parsed: E, failed: I } = _(y);
      I.length > 0 && console.warn(`Discarded ${I.length} invalid annotations`, I), o.bulkAddAnnotation(E, p, G.REMOTE);
    } else
      o.bulkAddAnnotation(y.map(ot), p, G.REMOTE);
  }, m = (y, p) => {
    y ? i.setSelected(y, p) : i.clear();
  }, w = (y) => {
    i.clear(), i.setUserSelectAction(y);
  }, T = (y) => {
    if (n) {
      const p = n.parse(y).parsed, _ = n.serialize(o.getAnnotation(p.id));
      return o.updateAnnotation(p), _;
    } else {
      const p = o.getAnnotation(y.id);
      return o.updateAnnotation(ot(y)), p;
    }
  };
  return {
    addAnnotation: s,
    cancelSelected: r,
    canRedo: t.canRedo,
    canUndo: t.canUndo,
    clearAnnotations: l,
    getAnnotationById: a,
    getAnnotations: c,
    getSelected: u,
    loadAnnotations: f,
    redo: t.redo,
    removeAnnotation: h,
    setAnnotations: g,
    setSelected: m,
    setUserSelectAction: w,
    undo: t.undo,
    updateAnnotation: T
  };
}, Hi = (e, t, n) => typeof t == "function" ? t(e, n) : t, Fi = (e, t) => typeof e != "function" && typeof t != "function" ? {
  ...e || {},
  ...t || {}
} : (n, o) => {
  const i = typeof e == "function" ? e(n, o) : e, s = typeof t == "function" ? t(n, o) : t;
  return {
    ...i || {},
    ...s || {}
  };
}, go = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
let mo = (e) => crypto.getRandomValues(new Uint8Array(e)), po = (e, t, n) => {
  let o = (2 << Math.log2(e.length - 1)) - 1, i = -~(1.6 * o * t / e.length);
  return (s = t) => {
    let r = "";
    for (; ; ) {
      let l = n(i), a = i;
      for (; a--; )
        if (r += e[l[a] & o] || "", r.length === s) return r;
    }
  };
}, yo = (e, t = 21) => po(e, t, mo), _o = (e = 21) => {
  let t = "", n = crypto.getRandomValues(new Uint8Array(e));
  for (; e--; )
    t += go[n[e] & 63];
  return t;
};
const wo = () => ({ isGuest: !0, id: yo("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_", 20)() }), bo = (e) => {
  const t = JSON.stringify(e);
  let n = 0;
  for (let o = 0, i = t.length; o < i; o++) {
    let s = t.charCodeAt(o);
    n = (n << 5) - n + s, n |= 0;
  }
  return `${n}`;
}, rn = (e) => e ? typeof e == "object" ? { ...e } : e : void 0, Eo = (e, t) => (Array.isArray(e) ? e : [e]).map((n) => {
  const { id: o, type: i, purpose: s, value: r, created: l, modified: a, creator: c, ...u } = n;
  return {
    id: o || `temp-${bo(n)}`,
    annotation: t,
    type: i,
    purpose: s,
    value: r,
    creator: rn(c),
    created: l ? new Date(l) : void 0,
    updated: a ? new Date(a) : void 0,
    ...u
  };
}), Ao = (e) => e.map((t) => {
  var n;
  const { annotation: o, created: i, updated: s, ...r } = t, l = {
    ...r,
    created: i == null ? void 0 : i.toISOString(),
    modified: s == null ? void 0 : s.toISOString()
  };
  return (n = l.id) != null && n.startsWith("temp-") && delete l.id, l;
}), So = [
  "#ff7c00",
  // orange
  "#1ac938",
  // green
  "#e8000b",
  // red
  "#8b2be2",
  // purple
  "#9f4800",
  // brown
  "#f14cc1",
  // pink
  "#ffc400",
  // khaki
  "#00d7ff",
  // cyan
  "#023eff"
  // blue
], Wi = () => {
  const e = [...So];
  return { assignRandomColor: () => {
    const t = Math.floor(Math.random() * e.length), n = e[t];
    return e.splice(t, 1), n;
  }, releaseColor: (t) => e.push(t) };
};
_o();
const qi = (e, t = { strict: !0, invertY: !1 }) => ({ parse: (i) => To(i, t), serialize: (i) => vo(i, e, t) }), To = (e, t = { strict: !0, invertY: !1 }) => {
  const n = e.id || tn(), {
    creator: o,
    created: i,
    modified: s,
    body: r,
    ...l
  } = e, a = Eo(r || [], n), c = Array.isArray(e.target) ? e.target[0] : e.target, u = Array.isArray(c.selector) ? c.selector[0] : c.selector, f = (u == null ? void 0 : u.type) === "FragmentSelector" ? Dn(u, t.invertY) : (u == null ? void 0 : u.type) === "SvgSelector" ? Nn(u) : void 0;
  return f || !t.strict ? {
    parsed: {
      ...l,
      id: n,
      bodies: a,
      target: {
        created: i ? new Date(i) : void 0,
        creator: rn(o),
        updated: s ? new Date(s) : void 0,
        ...Array.isArray(l.target) ? l.target[0] : l.target,
        annotation: n,
        selector: f || u
      }
    }
  } : {
    error: Error(`Invalid selector: ${JSON.stringify(u)}`)
  };
}, vo = (e, t, n = { strict: !0, invertY: !1 }) => {
  const {
    selector: o,
    creator: i,
    created: s,
    updated: r,
    updatedBy: l,
    // Excluded from serialization
    ...a
  } = e.target;
  let c;
  try {
    c = o.type == F.RECTANGLE ? Yn(o.geometry) : Un(o);
  } catch (f) {
    if (n.strict)
      throw f;
    c = o;
  }
  const u = {
    ...e,
    "@context": "http://www.w3.org/ns/anno.jsonld",
    id: e.id,
    type: "Annotation",
    body: Ao(e.bodies),
    created: s == null ? void 0 : s.toISOString(),
    creator: i,
    modified: r == null ? void 0 : r.toISOString(),
    target: {
      ...a,
      source: t,
      selector: c
    }
  };
  return delete u.bodies, "annotation" in u.target && delete u.target.annotation, u;
};
function Lt(e, t, n) {
  const o = e.slice();
  return o[10] = t[n], o[12] = n, o;
}
function kt(e) {
  let t, n;
  return t = new Ye({
    props: {
      x: (
        /*point*/
        e[10][0]
      ),
      y: (
        /*point*/
        e[10][1]
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), t.$on("pointerdown", function() {
    W(
      /*grab*/
      e[9](`HANDLE-${/*idx*/
      e[12]}`)
    ) && e[9](`HANDLE-${/*idx*/
    e[12]}`).apply(this, arguments);
  }), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      e = o;
      const s = {};
      i & /*geom*/
      16 && (s.x = /*point*/
      e[10][0]), i & /*geom*/
      16 && (s.y = /*point*/
      e[10][1]), i & /*viewportScale*/
      8 && (s.scale = /*viewportScale*/
      e[3]), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Mo(e) {
  let t, n, o, i, s, r, l, a, c, u, f, h = Le(
    /*geom*/
    e[4].points
  ), g = [];
  for (let w = 0; w < h.length; w += 1)
    g[w] = kt(Lt(e, h, w));
  const m = (w) => C(g[w], 1, 1, () => {
    g[w] = null;
  });
  return {
    c() {
      t = X("polygon"), i = ie(), s = X("polygon"), l = ie();
      for (let w = 0; w < g.length; w += 1)
        g[w].c();
      a = le(), d(t, "class", "a9s-outer"), d(t, "style", n = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(t, "points", o = /*geom*/
      e[4].points.map(It).join(" ")), d(s, "class", "a9s-inner a9s-shape-handle"), d(
        s,
        "style",
        /*computedStyle*/
        e[1]
      ), d(s, "points", r = /*geom*/
      e[4].points.map(Ot).join(" "));
    },
    m(w, T) {
      B(w, t, T), B(w, i, T), B(w, s, T), B(w, l, T);
      for (let y = 0; y < g.length; y += 1)
        g[y] && g[y].m(w, T);
      B(w, a, T), c = !0, u || (f = [
        H(t, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        }),
        H(s, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        })
      ], u = !0);
    },
    p(w, T) {
      if (e = w, (!c || T & /*computedStyle*/
      2 && n !== (n = /*computedStyle*/
      e[1] ? "display:none;" : void 0)) && d(t, "style", n), (!c || T & /*geom*/
      16 && o !== (o = /*geom*/
      e[4].points.map(It).join(" "))) && d(t, "points", o), (!c || T & /*computedStyle*/
      2) && d(
        s,
        "style",
        /*computedStyle*/
        e[1]
      ), (!c || T & /*geom*/
      16 && r !== (r = /*geom*/
      e[4].points.map(Ot).join(" "))) && d(s, "points", r), T & /*geom, viewportScale, grab*/
      536) {
        h = Le(
          /*geom*/
          e[4].points
        );
        let y;
        for (y = 0; y < h.length; y += 1) {
          const p = Lt(e, h, y);
          g[y] ? (g[y].p(p, T), Y(g[y], 1)) : (g[y] = kt(p), g[y].c(), Y(g[y], 1), g[y].m(a.parentNode, a));
        }
        for (se(), y = h.length; y < g.length; y += 1)
          m(y);
        re();
      }
    },
    i(w) {
      if (!c) {
        for (let T = 0; T < h.length; T += 1)
          Y(g[T]);
        c = !0;
      }
    },
    o(w) {
      g = g.filter(Boolean);
      for (let T = 0; T < g.length; T += 1)
        C(g[T]);
      c = !1;
    },
    d(w) {
      w && (O(t), O(i), O(s), O(l), O(a)), gt(g, w), u = !1, ge(f);
    }
  };
}
function Lo(e) {
  let t, n;
  return t = new an({
    props: {
      shape: (
        /*shape*/
        e[0]
      ),
      transform: (
        /*transform*/
        e[2]
      ),
      editor: (
        /*editor*/
        e[5]
      ),
      $$slots: {
        default: [
          Mo,
          ({ grab: o }) => ({ 9: o }),
          ({ grab: o }) => o ? 512 : 0
        ]
      },
      $$scope: { ctx: e }
    }
  }), t.$on(
    "change",
    /*change_handler*/
    e[6]
  ), t.$on(
    "grab",
    /*grab_handler*/
    e[7]
  ), t.$on(
    "release",
    /*release_handler*/
    e[8]
  ), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, [i]) {
      const s = {};
      i & /*shape*/
      1 && (s.shape = /*shape*/
      o[0]), i & /*transform*/
      4 && (s.transform = /*transform*/
      o[2]), i & /*$$scope, geom, viewportScale, grab, computedStyle*/
      8730 && (s.$$scope = { dirty: i, ctx: o }), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
const It = (e) => e.join(","), Ot = (e) => e.join(",");
function ko(e, t, n) {
  let o, { shape: i } = t, { computedStyle: s } = t, { transform: r } = t, { viewportScale: l = 1 } = t;
  const a = (h, g, m) => {
    let w;
    const T = h.geometry;
    g === "SHAPE" ? w = T.points.map(([p, _]) => [p + m[0], _ + m[1]]) : w = T.points.map(([p, _], E) => g === `HANDLE-${E}` ? [p + m[0], _ + m[1]] : [p, _]);
    const y = Ke(w);
    return { ...h, geometry: { points: w, bounds: y } };
  };
  function c(h) {
    me.call(this, e, h);
  }
  function u(h) {
    me.call(this, e, h);
  }
  function f(h) {
    me.call(this, e, h);
  }
  return e.$$set = (h) => {
    "shape" in h && n(0, i = h.shape), "computedStyle" in h && n(1, s = h.computedStyle), "transform" in h && n(2, r = h.transform), "viewportScale" in h && n(3, l = h.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*shape*/
    1 && n(4, o = i.geometry);
  }, [
    i,
    s,
    r,
    l,
    o,
    a,
    c,
    u,
    f
  ];
}
class Io extends ne {
  constructor(t) {
    super(), te(this, t, ko, Lo, Q, {
      shape: 0,
      computedStyle: 1,
      transform: 2,
      viewportScale: 3
    });
  }
}
const st = (e, t) => {
  const n = Math.abs(t[0] - e[0]), o = Math.abs(t[1] - e[1]);
  return Math.sqrt(Math.pow(n, 2) + Math.pow(o, 2));
}, Ae = [];
function Oo(e, t = j) {
  let n;
  const o = /* @__PURE__ */ new Set();
  function i(l) {
    if (Q(e, l) && (e = l, n)) {
      const a = !Ae.length;
      for (const c of o)
        c[1](), Ae.push(c, e);
      if (a) {
        for (let c = 0; c < Ae.length; c += 2)
          Ae[c][0](Ae[c + 1]);
        Ae.length = 0;
      }
    }
  }
  function s(l) {
    i(l(e));
  }
  function r(l, a = j) {
    const c = [l, a];
    return o.add(c), o.size === 1 && (n = t(i, s) || j), l(e), () => {
      o.delete(c), o.size === 0 && n && (n(), n = null);
    };
  }
  return { set: i, update: s, subscribe: r };
}
const Bo = (e, t) => {
  const { naturalWidth: n, naturalHeight: o } = e;
  if (!n && !o) {
    const { width: i, height: s } = e;
    t.setAttribute("viewBox", `0 0 ${i} ${s}`), e.addEventListener("load", (r) => {
      const l = r.target;
      t.setAttribute("viewBox", `0 0 ${l.naturalWidth} ${l.naturalHeight}`);
    });
  } else
    t.setAttribute("viewBox", `0 0 ${n} ${o}`);
}, Do = (e, t) => {
  Bo(e, t);
  const { subscribe: n, set: o } = Oo(1);
  let i;
  return window.ResizeObserver && (i = new ResizeObserver(() => {
    const r = t.getBoundingClientRect(), { width: l, height: a } = t.viewBox.baseVal, c = Math.max(
      r.width / l,
      r.height / a
    );
    o(c);
  }), i.observe(t.parentElement)), { destroy: () => {
    i && i.disconnect();
  }, subscribe: n };
}, Yo = typeof window > "u" || typeof navigator > "u" ? !1 : "ontouchstart" in window || navigator.maxTouchPoints > 0 || // @ts-ignore
navigator.msMaxTouchPoints > 0;
function Po(e) {
  let t, n, o, i, s, r;
  return {
    c() {
      t = X("rect"), d(t, "class", n = We(`a9s-handle ${/*$$props*/
      e[8].class || ""}`.trim()) + " svelte-1sgkh33"), d(t, "x", o = /*x*/
      e[0] - /*handleSize*/
      e[5] / 2), d(t, "y", i = /*y*/
      e[1] - /*handleSize*/
      e[5] / 2), d(
        t,
        "width",
        /*handleSize*/
        e[5]
      ), d(
        t,
        "height",
        /*handleSize*/
        e[5]
      );
    },
    m(l, a) {
      B(l, t, a), s || (r = H(
        t,
        "pointerdown",
        /*pointerdown_handler_2*/
        e[11]
      ), s = !0);
    },
    p(l, a) {
      a & /*$$props*/
      256 && n !== (n = We(`a9s-handle ${/*$$props*/
      l[8].class || ""}`.trim()) + " svelte-1sgkh33") && d(t, "class", n), a & /*x, handleSize*/
      33 && o !== (o = /*x*/
      l[0] - /*handleSize*/
      l[5] / 2) && d(t, "x", o), a & /*y, handleSize*/
      34 && i !== (i = /*y*/
      l[1] - /*handleSize*/
      l[5] / 2) && d(t, "y", i), a & /*handleSize*/
      32 && d(
        t,
        "width",
        /*handleSize*/
        l[5]
      ), a & /*handleSize*/
      32 && d(
        t,
        "height",
        /*handleSize*/
        l[5]
      );
    },
    d(l) {
      l && O(t), s = !1, r();
    }
  };
}
function Co(e) {
  let t, n, o, i, s, r, l, a, c;
  return {
    c() {
      t = X("g"), n = X("circle"), i = X("rect"), d(
        n,
        "cx",
        /*x*/
        e[0]
      ), d(
        n,
        "cy",
        /*y*/
        e[1]
      ), d(n, "r", o = /*radius*/
      e[3] / /*scale*/
      e[2]), d(n, "class", "a9s-touch-halo svelte-1sgkh33"), pe(
        n,
        "touched",
        /*touched*/
        e[4]
      ), d(i, "class", s = We(`a9s-handle ${/*$$props*/
      e[8].class || ""}`.trim()) + " svelte-1sgkh33"), d(i, "x", r = /*x*/
      e[0] - /*handleSize*/
      e[5] / 2), d(i, "y", l = /*y*/
      e[1] - /*handleSize*/
      e[5] / 2), d(
        i,
        "width",
        /*handleSize*/
        e[5]
      ), d(
        i,
        "height",
        /*handleSize*/
        e[5]
      ), d(t, "class", "a9s-touch-handle");
    },
    m(u, f) {
      B(u, t, f), he(t, n), he(t, i), a || (c = [
        H(
          n,
          "pointerdown",
          /*pointerdown_handler*/
          e[10]
        ),
        H(
          n,
          "pointerdown",
          /*onPointerDown*/
          e[6]
        ),
        H(
          n,
          "pointerup",
          /*onPointerUp*/
          e[7]
        ),
        H(
          i,
          "pointerdown",
          /*pointerdown_handler_1*/
          e[9]
        ),
        H(
          i,
          "pointerdown",
          /*onPointerDown*/
          e[6]
        ),
        H(
          i,
          "pointerup",
          /*onPointerUp*/
          e[7]
        )
      ], a = !0);
    },
    p(u, f) {
      f & /*x*/
      1 && d(
        n,
        "cx",
        /*x*/
        u[0]
      ), f & /*y*/
      2 && d(
        n,
        "cy",
        /*y*/
        u[1]
      ), f & /*radius, scale*/
      12 && o !== (o = /*radius*/
      u[3] / /*scale*/
      u[2]) && d(n, "r", o), f & /*touched*/
      16 && pe(
        n,
        "touched",
        /*touched*/
        u[4]
      ), f & /*$$props*/
      256 && s !== (s = We(`a9s-handle ${/*$$props*/
      u[8].class || ""}`.trim()) + " svelte-1sgkh33") && d(i, "class", s), f & /*x, handleSize*/
      33 && r !== (r = /*x*/
      u[0] - /*handleSize*/
      u[5] / 2) && d(i, "x", r), f & /*y, handleSize*/
      34 && l !== (l = /*y*/
      u[1] - /*handleSize*/
      u[5] / 2) && d(i, "y", l), f & /*handleSize*/
      32 && d(
        i,
        "width",
        /*handleSize*/
        u[5]
      ), f & /*handleSize*/
      32 && d(
        i,
        "height",
        /*handleSize*/
        u[5]
      );
    },
    d(u) {
      u && O(t), a = !1, ge(c);
    }
  };
}
function Xo(e) {
  let t;
  function n(s, r) {
    return Yo ? Co : Po;
  }
  let i = n()(e);
  return {
    c() {
      i.c(), t = le();
    },
    m(s, r) {
      i.m(s, r), B(s, t, r);
    },
    p(s, [r]) {
      i.p(s, r);
    },
    i: j,
    o: j,
    d(s) {
      s && O(t), i.d(s);
    }
  };
}
function Ro(e, t, n) {
  let o, { x: i } = t, { y: s } = t, { scale: r } = t, { radius: l = 30 } = t, a = !1;
  const c = (m) => {
    m.pointerType === "touch" && n(4, a = !0);
  }, u = () => n(4, a = !1);
  function f(m) {
    me.call(this, e, m);
  }
  function h(m) {
    me.call(this, e, m);
  }
  function g(m) {
    me.call(this, e, m);
  }
  return e.$$set = (m) => {
    n(8, t = ft(ft({}, t), bt(m))), "x" in m && n(0, i = m.x), "y" in m && n(1, s = m.y), "scale" in m && n(2, r = m.scale), "radius" in m && n(3, l = m.radius);
  }, e.$$.update = () => {
    e.$$.dirty & /*scale*/
    4 && n(5, o = 10 / r);
  }, t = bt(t), [
    i,
    s,
    r,
    l,
    a,
    o,
    c,
    u,
    t,
    f,
    h,
    g
  ];
}
class Ye extends ne {
  constructor(t) {
    super(), te(this, t, Ro, Xo, Q, { x: 0, y: 1, scale: 2, radius: 3 });
  }
}
function No(e) {
  let t, n, o, i, s, r, l, a, c, u, f, h, g, m, w, T, y, p, _, E, I, R, U, V, Z, A, S, b, v, P, D, z, oe, ae, Ie, ce, Oe, fe, Be, ue, N, k, J;
  return ae = new Ye({
    props: {
      class: "a9s-corner-handle-topleft",
      x: (
        /*geom*/
        e[4].x
      ),
      y: (
        /*geom*/
        e[4].y
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), ae.$on("pointerdown", function() {
    W(
      /*grab*/
      e[9]("TOP_LEFT")
    ) && e[9]("TOP_LEFT").apply(this, arguments);
  }), ce = new Ye({
    props: {
      class: "a9s-corner-handle-topright",
      x: (
        /*geom*/
        e[4].x + /*geom*/
        e[4].w
      ),
      y: (
        /*geom*/
        e[4].y
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), ce.$on("pointerdown", function() {
    W(
      /*grab*/
      e[9]("TOP_RIGHT")
    ) && e[9]("TOP_RIGHT").apply(this, arguments);
  }), fe = new Ye({
    props: {
      class: "a9s-corner-handle-bottomright",
      x: (
        /*geom*/
        e[4].x + /*geom*/
        e[4].w
      ),
      y: (
        /*geom*/
        e[4].y + /*geom*/
        e[4].h
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), fe.$on("pointerdown", function() {
    W(
      /*grab*/
      e[9]("BOTTOM_RIGHT")
    ) && e[9]("BOTTOM_RIGHT").apply(this, arguments);
  }), ue = new Ye({
    props: {
      class: "a9s-corner-handle-bottomleft",
      x: (
        /*geom*/
        e[4].x
      ),
      y: (
        /*geom*/
        e[4].y + /*geom*/
        e[4].h
      ),
      scale: (
        /*viewportScale*/
        e[3]
      )
    }
  }), ue.$on("pointerdown", function() {
    W(
      /*grab*/
      e[9]("BOTTOM_LEFT")
    ) && e[9]("BOTTOM_LEFT").apply(this, arguments);
  }), {
    c() {
      t = X("rect"), l = ie(), a = X("rect"), g = ie(), m = X("rect"), p = ie(), _ = X("rect"), U = ie(), V = X("rect"), b = ie(), v = X("rect"), oe = ie(), ee(ae.$$.fragment), Ie = ie(), ee(ce.$$.fragment), Oe = ie(), ee(fe.$$.fragment), Be = ie(), ee(ue.$$.fragment), d(t, "class", "a9s-outer"), d(t, "style", n = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(t, "x", o = /*geom*/
      e[4].x), d(t, "y", i = /*geom*/
      e[4].y), d(t, "width", s = /*geom*/
      e[4].w), d(t, "height", r = /*geom*/
      e[4].h), d(a, "class", "a9s-inner a9s-shape-handle"), d(
        a,
        "style",
        /*computedStyle*/
        e[1]
      ), d(a, "x", c = /*geom*/
      e[4].x), d(a, "y", u = /*geom*/
      e[4].y), d(a, "width", f = /*geom*/
      e[4].w), d(a, "height", h = /*geom*/
      e[4].h), d(m, "class", "a9s-edge-handle a9s-edge-handle-top"), d(m, "x", w = /*geom*/
      e[4].x), d(m, "y", T = /*geom*/
      e[4].y), d(m, "height", 1), d(m, "width", y = /*geom*/
      e[4].w), d(_, "class", "a9s-edge-handle a9s-edge-handle-right"), d(_, "x", E = /*geom*/
      e[4].x + /*geom*/
      e[4].w), d(_, "y", I = /*geom*/
      e[4].y), d(_, "height", R = /*geom*/
      e[4].h), d(_, "width", 1), d(V, "class", "a9s-edge-handle a9s-edge-handle-bottom"), d(V, "x", Z = /*geom*/
      e[4].x), d(V, "y", A = /*geom*/
      e[4].y + /*geom*/
      e[4].h), d(V, "height", 1), d(V, "width", S = /*geom*/
      e[4].w), d(v, "class", "a9s-edge-handle a9s-edge-handle-left"), d(v, "x", P = /*geom*/
      e[4].x), d(v, "y", D = /*geom*/
      e[4].y), d(v, "height", z = /*geom*/
      e[4].h), d(v, "width", 1);
    },
    m(L, M) {
      B(L, t, M), B(L, l, M), B(L, a, M), B(L, g, M), B(L, m, M), B(L, p, M), B(L, _, M), B(L, U, M), B(L, V, M), B(L, b, M), B(L, v, M), B(L, oe, M), x(ae, L, M), B(L, Ie, M), x(ce, L, M), B(L, Oe, M), x(fe, L, M), B(L, Be, M), x(ue, L, M), N = !0, k || (J = [
        H(t, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        }),
        H(a, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("SHAPE")
          ) && e[9]("SHAPE").apply(this, arguments);
        }),
        H(m, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("TOP")
          ) && e[9]("TOP").apply(this, arguments);
        }),
        H(_, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("RIGHT")
          ) && e[9]("RIGHT").apply(this, arguments);
        }),
        H(V, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("BOTTOM")
          ) && e[9]("BOTTOM").apply(this, arguments);
        }),
        H(v, "pointerdown", function() {
          W(
            /*grab*/
            e[9]("LEFT")
          ) && e[9]("LEFT").apply(this, arguments);
        })
      ], k = !0);
    },
    p(L, M) {
      e = L, (!N || M & /*computedStyle*/
      2 && n !== (n = /*computedStyle*/
      e[1] ? "display:none;" : void 0)) && d(t, "style", n), (!N || M & /*geom*/
      16 && o !== (o = /*geom*/
      e[4].x)) && d(t, "x", o), (!N || M & /*geom*/
      16 && i !== (i = /*geom*/
      e[4].y)) && d(t, "y", i), (!N || M & /*geom*/
      16 && s !== (s = /*geom*/
      e[4].w)) && d(t, "width", s), (!N || M & /*geom*/
      16 && r !== (r = /*geom*/
      e[4].h)) && d(t, "height", r), (!N || M & /*computedStyle*/
      2) && d(
        a,
        "style",
        /*computedStyle*/
        e[1]
      ), (!N || M & /*geom*/
      16 && c !== (c = /*geom*/
      e[4].x)) && d(a, "x", c), (!N || M & /*geom*/
      16 && u !== (u = /*geom*/
      e[4].y)) && d(a, "y", u), (!N || M & /*geom*/
      16 && f !== (f = /*geom*/
      e[4].w)) && d(a, "width", f), (!N || M & /*geom*/
      16 && h !== (h = /*geom*/
      e[4].h)) && d(a, "height", h), (!N || M & /*geom*/
      16 && w !== (w = /*geom*/
      e[4].x)) && d(m, "x", w), (!N || M & /*geom*/
      16 && T !== (T = /*geom*/
      e[4].y)) && d(m, "y", T), (!N || M & /*geom*/
      16 && y !== (y = /*geom*/
      e[4].w)) && d(m, "width", y), (!N || M & /*geom*/
      16 && E !== (E = /*geom*/
      e[4].x + /*geom*/
      e[4].w)) && d(_, "x", E), (!N || M & /*geom*/
      16 && I !== (I = /*geom*/
      e[4].y)) && d(_, "y", I), (!N || M & /*geom*/
      16 && R !== (R = /*geom*/
      e[4].h)) && d(_, "height", R), (!N || M & /*geom*/
      16 && Z !== (Z = /*geom*/
      e[4].x)) && d(V, "x", Z), (!N || M & /*geom*/
      16 && A !== (A = /*geom*/
      e[4].y + /*geom*/
      e[4].h)) && d(V, "y", A), (!N || M & /*geom*/
      16 && S !== (S = /*geom*/
      e[4].w)) && d(V, "width", S), (!N || M & /*geom*/
      16 && P !== (P = /*geom*/
      e[4].x)) && d(v, "x", P), (!N || M & /*geom*/
      16 && D !== (D = /*geom*/
      e[4].y)) && d(v, "y", D), (!N || M & /*geom*/
      16 && z !== (z = /*geom*/
      e[4].h)) && d(v, "height", z);
      const de = {};
      M & /*geom*/
      16 && (de.x = /*geom*/
      e[4].x), M & /*geom*/
      16 && (de.y = /*geom*/
      e[4].y), M & /*viewportScale*/
      8 && (de.scale = /*viewportScale*/
      e[3]), ae.$set(de);
      const _e = {};
      M & /*geom*/
      16 && (_e.x = /*geom*/
      e[4].x + /*geom*/
      e[4].w), M & /*geom*/
      16 && (_e.y = /*geom*/
      e[4].y), M & /*viewportScale*/
      8 && (_e.scale = /*viewportScale*/
      e[3]), ce.$set(_e);
      const Ue = {};
      M & /*geom*/
      16 && (Ue.x = /*geom*/
      e[4].x + /*geom*/
      e[4].w), M & /*geom*/
      16 && (Ue.y = /*geom*/
      e[4].y + /*geom*/
      e[4].h), M & /*viewportScale*/
      8 && (Ue.scale = /*viewportScale*/
      e[3]), fe.$set(Ue);
      const Ve = {};
      M & /*geom*/
      16 && (Ve.x = /*geom*/
      e[4].x), M & /*geom*/
      16 && (Ve.y = /*geom*/
      e[4].y + /*geom*/
      e[4].h), M & /*viewportScale*/
      8 && (Ve.scale = /*viewportScale*/
      e[3]), ue.$set(Ve);
    },
    i(L) {
      N || (Y(ae.$$.fragment, L), Y(ce.$$.fragment, L), Y(fe.$$.fragment, L), Y(ue.$$.fragment, L), N = !0);
    },
    o(L) {
      C(ae.$$.fragment, L), C(ce.$$.fragment, L), C(fe.$$.fragment, L), C(ue.$$.fragment, L), N = !1;
    },
    d(L) {
      L && (O(t), O(l), O(a), O(g), O(m), O(p), O(_), O(U), O(V), O(b), O(v), O(oe), O(Ie), O(Oe), O(Be)), $(ae, L), $(ce, L), $(fe, L), $(ue, L), k = !1, ge(J);
    }
  };
}
function Uo(e) {
  let t, n;
  return t = new an({
    props: {
      shape: (
        /*shape*/
        e[0]
      ),
      transform: (
        /*transform*/
        e[2]
      ),
      editor: (
        /*editor*/
        e[5]
      ),
      $$slots: {
        default: [
          No,
          ({ grab: o }) => ({ 9: o }),
          ({ grab: o }) => o ? 512 : 0
        ]
      },
      $$scope: { ctx: e }
    }
  }), t.$on(
    "grab",
    /*grab_handler*/
    e[6]
  ), t.$on(
    "change",
    /*change_handler*/
    e[7]
  ), t.$on(
    "release",
    /*release_handler*/
    e[8]
  ), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, [i]) {
      const s = {};
      i & /*shape*/
      1 && (s.shape = /*shape*/
      o[0]), i & /*transform*/
      4 && (s.transform = /*transform*/
      o[2]), i & /*$$scope, geom, viewportScale, grab, computedStyle*/
      1562 && (s.$$scope = { dirty: i, ctx: o }), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Vo(e, t, n) {
  let o, { shape: i } = t, { computedStyle: s } = t, { transform: r } = t, { viewportScale: l = 1 } = t;
  const a = (h, g, m) => {
    const w = h.geometry.bounds;
    let [T, y] = [w.minX, w.minY], [p, _] = [w.maxX, w.maxY];
    const [E, I] = m;
    if (g === "SHAPE")
      T += E, p += E, y += I, _ += I;
    else {
      switch (g) {
        case "TOP":
        case "TOP_LEFT":
        case "TOP_RIGHT": {
          y += I;
          break;
        }
        case "BOTTOM":
        case "BOTTOM_LEFT":
        case "BOTTOM_RIGHT": {
          _ += I;
          break;
        }
      }
      switch (g) {
        case "LEFT":
        case "TOP_LEFT":
        case "BOTTOM_LEFT": {
          T += E;
          break;
        }
        case "RIGHT":
        case "TOP_RIGHT":
        case "BOTTOM_RIGHT": {
          p += E;
          break;
        }
      }
    }
    const R = Math.min(T, p), U = Math.min(y, _), V = Math.abs(p - T), Z = Math.abs(_ - y);
    return {
      ...h,
      geometry: {
        x: R,
        y: U,
        w: V,
        h: Z,
        bounds: {
          minX: R,
          minY: U,
          maxX: R + V,
          maxY: U + Z
        }
      }
    };
  };
  function c(h) {
    me.call(this, e, h);
  }
  function u(h) {
    me.call(this, e, h);
  }
  function f(h) {
    me.call(this, e, h);
  }
  return e.$$set = (h) => {
    "shape" in h && n(0, i = h.shape), "computedStyle" in h && n(1, s = h.computedStyle), "transform" in h && n(2, r = h.transform), "viewportScale" in h && n(3, l = h.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*shape*/
    1 && n(4, o = i.geometry);
  }, [
    i,
    s,
    r,
    l,
    o,
    a,
    c,
    u,
    f
  ];
}
class Go extends ne {
  constructor(t) {
    super(), te(this, t, Vo, Uo, Q, {
      shape: 0,
      computedStyle: 1,
      transform: 2,
      viewportScale: 3
    });
  }
}
const ln = /* @__PURE__ */ new Map([
  [F.RECTANGLE, Go],
  [F.POLYGON, Io]
]), jo = (e) => ln.get(e.type), zo = (e, t) => ln.set(e, t), Ho = (e) => ({}), Bt = (e) => ({ grab: (
  /*onGrab*/
  e[0]
) });
function Fo(e) {
  let t, n, o, i;
  const s = (
    /*#slots*/
    e[7].default
  ), r = pn(
    s,
    e,
    /*$$scope*/
    e[6],
    Bt
  );
  return {
    c() {
      t = X("g"), r && r.c(), d(t, "class", "a9s-annotation selected");
    },
    m(l, a) {
      B(l, t, a), r && r.m(t, null), n = !0, o || (i = [
        H(
          t,
          "pointerup",
          /*onRelease*/
          e[2]
        ),
        H(
          t,
          "pointermove",
          /*onPointerMove*/
          e[1]
        )
      ], o = !0);
    },
    p(l, [a]) {
      r && r.p && (!n || a & /*$$scope*/
      64) && _n(
        r,
        s,
        l,
        /*$$scope*/
        l[6],
        n ? yn(
          s,
          /*$$scope*/
          l[6],
          a,
          Ho
        ) : wn(
          /*$$scope*/
          l[6]
        ),
        Bt
      );
    },
    i(l) {
      n || (Y(r, l), n = !0);
    },
    o(l) {
      C(r, l), n = !1;
    },
    d(l) {
      l && O(t), r && r.d(l), o = !1, ge(i);
    }
  };
}
function Wo(e, t, n) {
  let { $$slots: o = {}, $$scope: i } = t;
  const s = ke();
  let { shape: r } = t, { editor: l } = t, { transform: a } = t, c, u, f;
  const h = (w) => (T) => {
    c = w, u = a.elementToImage(T.offsetX, T.offsetY), f = r, T.target.setPointerCapture(T.pointerId), s("grab", T);
  }, g = (w) => {
    if (c) {
      const [T, y] = a.elementToImage(w.offsetX, w.offsetY), p = [T - u[0], y - u[1]];
      n(3, r = l(f, c, p)), s("change", r);
    }
  }, m = (w) => {
    w.target.releasePointerCapture(w.pointerId), c = void 0, f = r, s("release", w);
  };
  return e.$$set = (w) => {
    "shape" in w && n(3, r = w.shape), "editor" in w && n(4, l = w.editor), "transform" in w && n(5, a = w.transform), "$$scope" in w && n(6, i = w.$$scope);
  }, [h, g, m, r, l, a, i, o];
}
class an extends ne {
  constructor(t) {
    super(), te(this, t, Wo, Fo, Q, { shape: 3, editor: 4, transform: 5 });
  }
}
const Qe = (e, t) => {
  const n = typeof t == "function" ? t(e) : t;
  if (n) {
    const { fill: o, fillOpacity: i, stroke: s, strokeWidth: r, strokeOpacity: l } = n;
    let a = "";
    return o && (a += `fill:${o};`, a += `fill-opacity:${i || "0.25"};`), s && (a += `stroke:${s};`, a += `stroke-width:${r || "1"};`, a += `stroke-opacity:${l || "1"};`), a;
  }
};
function qo(e, t, n) {
  let o;
  const i = ke();
  let { annotation: s } = t, { editor: r } = t, { style: l } = t, { target: a } = t, { transform: c } = t, { viewportScale: u } = t, f;
  return Ne(() => (n(6, f = new r({
    target: a,
    props: {
      shape: s.target.selector,
      computedStyle: o,
      transform: c,
      viewportScale: u
    }
  })), f.$on("change", (h) => {
    f.$$set({ shape: h.detail }), i("change", h.detail);
  }), f.$on("grab", (h) => i("grab", h.detail)), f.$on("release", (h) => i("release", h.detail)), () => {
    f.$destroy();
  })), e.$$set = (h) => {
    "annotation" in h && n(0, s = h.annotation), "editor" in h && n(1, r = h.editor), "style" in h && n(2, l = h.style), "target" in h && n(3, a = h.target), "transform" in h && n(4, c = h.transform), "viewportScale" in h && n(5, u = h.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    5 && n(7, o = Qe(s, l)), e.$$.dirty & /*annotation, editorComponent*/
    65 && s && (f == null || f.$set({ shape: s.target.selector })), e.$$.dirty & /*editorComponent, transform*/
    80 && f && f.$set({ transform: c }), e.$$.dirty & /*editorComponent, viewportScale*/
    96 && f && f.$set({ viewportScale: u }), e.$$.dirty & /*editorComponent, computedStyle*/
    192 && f && o && f.$set({ computedStyle: o });
  }, [
    s,
    r,
    l,
    a,
    c,
    u,
    f,
    o
  ];
}
class Ko extends ne {
  constructor(t) {
    super(), te(this, t, qo, null, Q, {
      annotation: 0,
      editor: 1,
      style: 2,
      target: 3,
      transform: 4,
      viewportScale: 5
    });
  }
}
function Jo(e, t, n) {
  const o = ke();
  let { drawingMode: i } = t, { target: s } = t, { tool: r } = t, { transform: l } = t, { viewportScale: a } = t, c;
  return Ne(() => {
    const u = s.closest("svg"), f = [], h = (g, m, w) => {
      u == null || u.addEventListener(g, m, w), f.push(() => u == null ? void 0 : u.removeEventListener(g, m, w));
    };
    return n(5, c = new r({
      target: s,
      props: {
        addEventListener: h,
        drawingMode: i,
        transform: l,
        viewportScale: a
      }
    })), c.$on("create", (g) => o("create", g.detail)), () => {
      f.forEach((g) => g()), c.$destroy();
    };
  }), e.$$set = (u) => {
    "drawingMode" in u && n(0, i = u.drawingMode), "target" in u && n(1, s = u.target), "tool" in u && n(2, r = u.tool), "transform" in u && n(3, l = u.transform), "viewportScale" in u && n(4, a = u.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*toolComponent, transform*/
    40 && c && c.$set({ transform: l }), e.$$.dirty & /*toolComponent, viewportScale*/
    48 && c && c.$set({ viewportScale: a });
  }, [i, s, r, l, a, c];
}
class Qo extends ne {
  constructor(t) {
    super(), te(this, t, Jo, null, Q, {
      drawingMode: 0,
      target: 1,
      tool: 2,
      transform: 3,
      viewportScale: 4
    });
  }
}
function Dt(e) {
  let t, n;
  return {
    c() {
      t = X("rect"), n = X("rect"), d(t, "class", "a9s-outer"), d(
        t,
        "x",
        /*x*/
        e[1]
      ), d(
        t,
        "y",
        /*y*/
        e[2]
      ), d(
        t,
        "width",
        /*w*/
        e[3]
      ), d(
        t,
        "height",
        /*h*/
        e[4]
      ), d(n, "class", "a9s-inner"), d(
        n,
        "x",
        /*x*/
        e[1]
      ), d(
        n,
        "y",
        /*y*/
        e[2]
      ), d(
        n,
        "width",
        /*w*/
        e[3]
      ), d(
        n,
        "height",
        /*h*/
        e[4]
      );
    },
    m(o, i) {
      B(o, t, i), B(o, n, i);
    },
    p(o, i) {
      i & /*x*/
      2 && d(
        t,
        "x",
        /*x*/
        o[1]
      ), i & /*y*/
      4 && d(
        t,
        "y",
        /*y*/
        o[2]
      ), i & /*w*/
      8 && d(
        t,
        "width",
        /*w*/
        o[3]
      ), i & /*h*/
      16 && d(
        t,
        "height",
        /*h*/
        o[4]
      ), i & /*x*/
      2 && d(
        n,
        "x",
        /*x*/
        o[1]
      ), i & /*y*/
      4 && d(
        n,
        "y",
        /*y*/
        o[2]
      ), i & /*w*/
      8 && d(
        n,
        "width",
        /*w*/
        o[3]
      ), i & /*h*/
      16 && d(
        n,
        "height",
        /*h*/
        o[4]
      );
    },
    d(o) {
      o && (O(t), O(n));
    }
  };
}
function Zo(e) {
  let t, n = (
    /*origin*/
    e[0] && Dt(e)
  );
  return {
    c() {
      t = X("g"), n && n.c(), d(t, "class", "a9s-annotation a9s-rubberband");
    },
    m(o, i) {
      B(o, t, i), n && n.m(t, null);
    },
    p(o, [i]) {
      /*origin*/
      o[0] ? n ? n.p(o, i) : (n = Dt(o), n.c(), n.m(t, null)) : n && (n.d(1), n = null);
    },
    i: j,
    o: j,
    d(o) {
      o && O(t), n && n.d();
    }
  };
}
function xo(e, t, n) {
  const o = ke();
  let { addEventListener: i } = t, { drawingMode: s } = t, { transform: r } = t, l, a, c, u, f, h, g;
  const m = (p) => {
    const _ = p;
    l = performance.now(), s === "drag" && (n(0, a = r.elementToImage(_.offsetX, _.offsetY)), c = a, n(1, u = a[0]), n(2, f = a[1]), n(3, h = 1), n(4, g = 1));
  }, w = (p) => {
    const _ = p;
    a && (c = r.elementToImage(_.offsetX, _.offsetY), n(1, u = Math.min(c[0], a[0])), n(2, f = Math.min(c[1], a[1])), n(3, h = Math.abs(c[0] - a[0])), n(4, g = Math.abs(c[1] - a[1])));
  }, T = (p) => {
    const _ = p, E = performance.now() - l;
    if (s === "click") {
      if (E > 300) return;
      a ? y() : (n(0, a = r.elementToImage(_.offsetX, _.offsetY)), c = a, n(1, u = a[0]), n(2, f = a[1]), n(3, h = 1), n(4, g = 1));
    } else a && (E > 300 || h * g > 100 ? (_.stopPropagation(), y()) : (n(0, a = void 0), c = void 0));
  }, y = () => {
    if (h * g > 15) {
      const p = {
        type: F.RECTANGLE,
        geometry: {
          bounds: {
            minX: u,
            minY: f,
            maxX: u + h,
            maxY: f + g
          },
          x: u,
          y: f,
          w: h,
          h: g
        }
      };
      o("create", p);
    }
    n(0, a = void 0), c = void 0;
  };
  return Ne(() => {
    i("pointerdown", m), i("pointermove", w), i("pointerup", T, !0);
  }), e.$$set = (p) => {
    "addEventListener" in p && n(5, i = p.addEventListener), "drawingMode" in p && n(6, s = p.drawingMode), "transform" in p && n(7, r = p.transform);
  }, [a, u, f, h, g, i, s, r];
}
class $o extends ne {
  constructor(t) {
    super(), te(this, t, xo, Zo, Q, {
      addEventListener: 5,
      drawingMode: 6,
      transform: 7
    });
  }
}
function rt(e) {
  const t = e.slice(), n = (
    /*isClosable*/
    (t[2] ? (
      /*points*/
      t[0]
    ) : [
      .../*points*/
      t[0],
      /*cursor*/
      t[1]
    ]).map((o) => o.join(",")).join(" ")
  );
  return t[16] = n, t;
}
function Yt(e) {
  let t, n, o, i, s, r = (
    /*isClosable*/
    e[2] && Pt(e)
  );
  return {
    c() {
      t = X("polygon"), o = X("polygon"), r && r.c(), s = le(), d(t, "class", "a9s-outer"), d(t, "points", n = /*coords*/
      e[16]), d(o, "class", "a9s-inner"), d(o, "points", i = /*coords*/
      e[16]);
    },
    m(l, a) {
      B(l, t, a), B(l, o, a), r && r.m(l, a), B(l, s, a);
    },
    p(l, a) {
      a & /*isClosable, points, cursor*/
      7 && n !== (n = /*coords*/
      l[16]) && d(t, "points", n), a & /*isClosable, points, cursor*/
      7 && i !== (i = /*coords*/
      l[16]) && d(o, "points", i), /*isClosable*/
      l[2] ? r ? r.p(l, a) : (r = Pt(l), r.c(), r.m(s.parentNode, s)) : r && (r.d(1), r = null);
    },
    d(l) {
      l && (O(t), O(o), O(s)), r && r.d(l);
    }
  };
}
function Pt(e) {
  let t, n, o;
  return {
    c() {
      t = X("rect"), d(t, "class", "a9s-corner-handle"), d(t, "x", n = /*points*/
      e[0][0][0] - /*handleSize*/
      e[3] / 2), d(t, "y", o = /*points*/
      e[0][0][1] - /*handleSize*/
      e[3] / 2), d(
        t,
        "height",
        /*handleSize*/
        e[3]
      ), d(
        t,
        "width",
        /*handleSize*/
        e[3]
      );
    },
    m(i, s) {
      B(i, t, s);
    },
    p(i, s) {
      s & /*points, handleSize*/
      9 && n !== (n = /*points*/
      i[0][0][0] - /*handleSize*/
      i[3] / 2) && d(t, "x", n), s & /*points, handleSize*/
      9 && o !== (o = /*points*/
      i[0][0][1] - /*handleSize*/
      i[3] / 2) && d(t, "y", o), s & /*handleSize*/
      8 && d(
        t,
        "height",
        /*handleSize*/
        i[3]
      ), s & /*handleSize*/
      8 && d(
        t,
        "width",
        /*handleSize*/
        i[3]
      );
    },
    d(i) {
      i && O(t);
    }
  };
}
function ei(e) {
  let t, n = (
    /*cursor*/
    e[1] && Yt(rt(e))
  );
  return {
    c() {
      t = X("g"), n && n.c(), d(t, "class", "a9s-annotation a9s-rubberband");
    },
    m(o, i) {
      B(o, t, i), n && n.m(t, null);
    },
    p(o, [i]) {
      /*cursor*/
      o[1] ? n ? n.p(rt(o), i) : (n = Yt(rt(o)), n.c(), n.m(t, null)) : n && (n.d(1), n = null);
    },
    i: j,
    o: j,
    d(o) {
      o && O(t), n && n.d();
    }
  };
}
const ti = 20, ni = 1500;
function oi(e, t, n) {
  let o;
  const i = ke();
  let { addEventListener: s } = t, { drawingMode: r } = t, { transform: l } = t, { viewportScale: a = 1 } = t, c, u = [], f, h, g = !1;
  const m = (_) => {
    const E = _, { timeStamp: I, offsetX: R, offsetY: U } = E;
    if (c = { timeStamp: I, offsetX: R, offsetY: U }, r === "drag" && u.length === 0) {
      const V = l.elementToImage(E.offsetX, E.offsetY);
      u.push(V), n(1, f = V);
    }
  }, w = (_) => {
    const E = _;
    if (h && clearTimeout(h), u.length > 0) {
      if (n(1, f = l.elementToImage(E.offsetX, E.offsetY)), u.length > 2) {
        const I = st(f, u[0]) * a;
        n(2, g = I < ti);
      }
      E.pointerType === "touch" && (h = setTimeout(
        () => {
          y();
        },
        ni
      ));
    }
  }, T = (_) => {
    const E = _;
    if (h && clearTimeout(h), r === "click") {
      const I = E.timeStamp - c.timeStamp, R = st([c.offsetX, c.offsetY], [E.offsetX, E.offsetY]);
      if (I > 300 || R > 15) return;
      if (g)
        p();
      else if (u.length === 0) {
        const U = l.elementToImage(E.offsetX, E.offsetY);
        u.push(U), n(1, f = U);
      } else
        u.push(f);
    } else {
      if (u.length === 1 && st(u[0], f) <= 4) {
        n(0, u = []), n(1, f = void 0);
        return;
      }
      E.stopImmediatePropagation(), g ? p() : u.push(f);
    }
  }, y = () => {
    if (!f) return;
    const _ = [...u, f], E = {
      type: F.POLYGON,
      geometry: { bounds: Ke(_), points: _ }
    };
    ht(E) > 4 && (n(0, u = []), n(1, f = void 0), i("create", E));
  }, p = () => {
    const _ = {
      type: F.POLYGON,
      geometry: {
        bounds: Ke(u),
        points: [...u]
      }
    };
    n(0, u = []), n(1, f = void 0), i("create", _);
  };
  return Ne(() => {
    s("pointerdown", m, !0), s("pointermove", w), s("pointerup", T, !0), s("dblclick", y, !0);
  }), e.$$set = (_) => {
    "addEventListener" in _ && n(4, s = _.addEventListener), "drawingMode" in _ && n(5, r = _.drawingMode), "transform" in _ && n(6, l = _.transform), "viewportScale" in _ && n(7, a = _.viewportScale);
  }, e.$$.update = () => {
    e.$$.dirty & /*viewportScale*/
    128 && n(3, o = 10 / a);
  }, [
    u,
    f,
    g,
    o,
    s,
    r,
    l,
    a
  ];
}
class ii extends ne {
  constructor(t) {
    super(), te(this, t, oi, ei, Q, {
      addEventListener: 4,
      drawingMode: 5,
      transform: 6,
      viewportScale: 7
    });
  }
}
const _t = /* @__PURE__ */ new Map([
  ["rectangle", { tool: $o }],
  ["polygon", { tool: ii }]
]), cn = () => [..._t.keys()], fn = (e) => _t.get(e), si = (e, t, n) => _t.set(e, { tool: t, opts: n });
function ri(e) {
  let t, n, o, i, s;
  return {
    c() {
      t = X("g"), n = X("ellipse"), i = X("ellipse"), d(n, "class", "a9s-outer"), d(n, "style", o = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(
        n,
        "cx",
        /*cx*/
        e[2]
      ), d(
        n,
        "cy",
        /*cy*/
        e[3]
      ), d(
        n,
        "rx",
        /*rx*/
        e[4]
      ), d(
        n,
        "ry",
        /*ry*/
        e[5]
      ), d(i, "class", "a9s-inner"), d(
        i,
        "style",
        /*computedStyle*/
        e[1]
      ), d(
        i,
        "cx",
        /*cx*/
        e[2]
      ), d(
        i,
        "cy",
        /*cy*/
        e[3]
      ), d(
        i,
        "rx",
        /*rx*/
        e[4]
      ), d(
        i,
        "ry",
        /*ry*/
        e[5]
      ), d(t, "class", "a9s-annotation"), d(t, "data-id", s = /*annotation*/
      e[0].id);
    },
    m(r, l) {
      B(r, t, l), he(t, n), he(t, i);
    },
    p(r, [l]) {
      l & /*computedStyle*/
      2 && o !== (o = /*computedStyle*/
      r[1] ? "display:none;" : void 0) && d(n, "style", o), l & /*computedStyle*/
      2 && d(
        i,
        "style",
        /*computedStyle*/
        r[1]
      ), l & /*annotation*/
      1 && s !== (s = /*annotation*/
      r[0].id) && d(t, "data-id", s);
    },
    i: j,
    o: j,
    d(r) {
      r && O(t);
    }
  };
}
function li(e, t, n) {
  let o, { annotation: i } = t, { geom: s } = t, { style: r } = t;
  const { cx: l, cy: a, rx: c, ry: u } = s;
  return e.$$set = (f) => {
    "annotation" in f && n(0, i = f.annotation), "geom" in f && n(6, s = f.geom), "style" in f && n(7, r = f.style);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    129 && n(1, o = Qe(i, r));
  }, [i, o, l, a, c, u, s, r];
}
class ai extends ne {
  constructor(t) {
    super(), te(this, t, li, ri, Q, { annotation: 0, geom: 6, style: 7 });
  }
}
function ci(e) {
  let t, n, o, i, s;
  return {
    c() {
      t = X("g"), n = X("polygon"), i = X("polygon"), d(n, "class", "a9s-outer"), d(n, "style", o = /*computedStyle*/
      e[1] ? "display:none;" : void 0), d(
        n,
        "points",
        /*points*/
        e[2].map(fi).join(" ")
      ), d(i, "class", "a9s-inner"), d(
        i,
        "style",
        /*computedStyle*/
        e[1]
      ), d(
        i,
        "points",
        /*points*/
        e[2].map(ui).join(" ")
      ), d(t, "class", "a9s-annotation"), d(t, "data-id", s = /*annotation*/
      e[0].id);
    },
    m(r, l) {
      B(r, t, l), he(t, n), he(t, i);
    },
    p(r, [l]) {
      l & /*computedStyle*/
      2 && o !== (o = /*computedStyle*/
      r[1] ? "display:none;" : void 0) && d(n, "style", o), l & /*computedStyle*/
      2 && d(
        i,
        "style",
        /*computedStyle*/
        r[1]
      ), l & /*annotation*/
      1 && s !== (s = /*annotation*/
      r[0].id) && d(t, "data-id", s);
    },
    i: j,
    o: j,
    d(r) {
      r && O(t);
    }
  };
}
const fi = (e) => e.join(","), ui = (e) => e.join(",");
function di(e, t, n) {
  let o, { annotation: i } = t, { geom: s } = t, { style: r } = t;
  const { points: l } = s;
  return e.$$set = (a) => {
    "annotation" in a && n(0, i = a.annotation), "geom" in a && n(3, s = a.geom), "style" in a && n(4, r = a.style);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    17 && n(1, o = Qe(i, r));
  }, [i, o, l, s, r];
}
class hi extends ne {
  constructor(t) {
    super(), te(this, t, di, ci, Q, { annotation: 0, geom: 3, style: 4 });
  }
}
function gi(e) {
  let t, n, o, i, s;
  return {
    c() {
      t = X("g"), n = X("rect"), i = X("rect"), d(n, "class", "a9s-outer"), d(n, "style", o = /*computedStyle*/
      e[5] ? "display:none;" : void 0), d(
        n,
        "x",
        /*x*/
        e[4]
      ), d(
        n,
        "y",
        /*y*/
        e[3]
      ), d(
        n,
        "width",
        /*w*/
        e[2]
      ), d(
        n,
        "height",
        /*h*/
        e[1]
      ), d(i, "class", "a9s-inner"), d(
        i,
        "style",
        /*computedStyle*/
        e[5]
      ), d(
        i,
        "x",
        /*x*/
        e[4]
      ), d(
        i,
        "y",
        /*y*/
        e[3]
      ), d(
        i,
        "width",
        /*w*/
        e[2]
      ), d(
        i,
        "height",
        /*h*/
        e[1]
      ), d(t, "class", "a9s-annotation"), d(t, "data-id", s = /*annotation*/
      e[0].id);
    },
    m(r, l) {
      B(r, t, l), he(t, n), he(t, i);
    },
    p(r, [l]) {
      l & /*computedStyle*/
      32 && o !== (o = /*computedStyle*/
      r[5] ? "display:none;" : void 0) && d(n, "style", o), l & /*x*/
      16 && d(
        n,
        "x",
        /*x*/
        r[4]
      ), l & /*y*/
      8 && d(
        n,
        "y",
        /*y*/
        r[3]
      ), l & /*w*/
      4 && d(
        n,
        "width",
        /*w*/
        r[2]
      ), l & /*h*/
      2 && d(
        n,
        "height",
        /*h*/
        r[1]
      ), l & /*computedStyle*/
      32 && d(
        i,
        "style",
        /*computedStyle*/
        r[5]
      ), l & /*x*/
      16 && d(
        i,
        "x",
        /*x*/
        r[4]
      ), l & /*y*/
      8 && d(
        i,
        "y",
        /*y*/
        r[3]
      ), l & /*w*/
      4 && d(
        i,
        "width",
        /*w*/
        r[2]
      ), l & /*h*/
      2 && d(
        i,
        "height",
        /*h*/
        r[1]
      ), l & /*annotation*/
      1 && s !== (s = /*annotation*/
      r[0].id) && d(t, "data-id", s);
    },
    i: j,
    o: j,
    d(r) {
      r && O(t);
    }
  };
}
function mi(e, t, n) {
  let o, i, s, r, l, { annotation: a } = t, { geom: c } = t, { style: u } = t;
  return e.$$set = (f) => {
    "annotation" in f && n(0, a = f.annotation), "geom" in f && n(6, c = f.geom), "style" in f && n(7, u = f.style);
  }, e.$$.update = () => {
    e.$$.dirty & /*annotation, style*/
    129 && n(5, o = Qe(a, u)), e.$$.dirty & /*geom*/
    64 && n(4, { x: i, y: s, w: r, h: l } = c, i, (n(3, s), n(6, c)), (n(2, r), n(6, c)), (n(1, l), n(6, c)));
  }, [a, l, r, s, i, o, c, u];
}
class pi extends ne {
  constructor(t) {
    super(), te(this, t, mi, gi, Q, { annotation: 0, geom: 6, style: 7 });
  }
}
const Ki = {
  elementToImage: (e, t) => [e, t]
}, yi = (e) => ({
  elementToImage: (t, n) => {
    const o = e.getBoundingClientRect(), i = e.createSVGPoint();
    i.x = t + o.x, i.y = n + o.y;
    const { x: s, y: r } = i.matrixTransform(e.getScreenCTM().inverse());
    return [s, r];
  }
}), _i = 250, wi = (e, t) => {
  const n = ke();
  let o;
  return { onPointerDown: () => o = performance.now(), onPointerUp: (r) => {
    if (performance.now() - o < _i) {
      const { x: a, y: c } = un(r, e), u = t.getAt(a, c);
      u ? n("click", { originalEvent: r, annotation: u }) : n("click", { originalEvent: r });
    }
  } };
}, un = (e, t) => {
  const n = t.createSVGPoint(), o = t.getBoundingClientRect(), i = e.clientX - o.x, s = e.clientY - o.y, { left: r, top: l } = t.getBoundingClientRect();
  return n.x = i + r, n.y = s + l, n.matrixTransform(t.getScreenCTM().inverse());
};
function Ct(e, t, n) {
  const o = e.slice();
  o[37] = t[n];
  const i = (
    /*getEditor*/
    o[23](
      /*editable*/
      o[37].target.selector
    )
  );
  return o[38] = i, o;
}
function Xt(e, t, n) {
  const o = e.slice();
  return o[41] = t[n], o;
}
function lt(e) {
  const t = e.slice(), n = (
    /*annotation*/
    t[41].target.selector
  );
  return t[44] = n, t;
}
function Rt(e) {
  let t = (
    /*annotation*/
    e[41].id
  ), n, o, i = Nt(e);
  return {
    c() {
      i.c(), n = le();
    },
    m(s, r) {
      i.m(s, r), B(s, n, r), o = !0;
    },
    p(s, r) {
      r[0] & /*$store*/
      32768 && Q(t, t = /*annotation*/
      s[41].id) ? (se(), C(i, 1, 1, j), re(), i = Nt(s), i.c(), Y(i, 1), i.m(n.parentNode, n)) : i.p(s, r);
    },
    i(s) {
      o || (Y(i), o = !0);
    },
    o(s) {
      C(i), o = !1;
    },
    d(s) {
      s && O(n), i.d(s);
    }
  };
}
function bi(e) {
  let t, n;
  return t = new hi({
    props: {
      annotation: (
        /*annotation*/
        e[41]
      ),
      geom: (
        /*selector*/
        e[44].geometry
      ),
      style: (
        /*style*/
        e[1]
      )
    }
  }), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      const s = {};
      i[0] & /*$store*/
      32768 && (s.annotation = /*annotation*/
      o[41]), i[0] & /*$store*/
      32768 && (s.geom = /*selector*/
      o[44].geometry), i[0] & /*style*/
      2 && (s.style = /*style*/
      o[1]), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Ei(e) {
  let t, n;
  return t = new pi({
    props: {
      annotation: (
        /*annotation*/
        e[41]
      ),
      geom: (
        /*selector*/
        e[44].geometry
      ),
      style: (
        /*style*/
        e[1]
      )
    }
  }), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      const s = {};
      i[0] & /*$store*/
      32768 && (s.annotation = /*annotation*/
      o[41]), i[0] & /*$store*/
      32768 && (s.geom = /*selector*/
      o[44].geometry), i[0] & /*style*/
      2 && (s.style = /*style*/
      o[1]), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Ai(e) {
  var o;
  let t, n;
  return t = new ai({
    props: {
      annotation: (
        /*annotation*/
        e[41]
      ),
      geom: (
        /*selector*/
        (o = e[44]) == null ? void 0 : o.geometry
      ),
      style: (
        /*style*/
        e[1]
      )
    }
  }), {
    c() {
      ee(t.$$.fragment);
    },
    m(i, s) {
      x(t, i, s), n = !0;
    },
    p(i, s) {
      var l;
      const r = {};
      s[0] & /*$store*/
      32768 && (r.annotation = /*annotation*/
      i[41]), s[0] & /*$store*/
      32768 && (r.geom = /*selector*/
      (l = i[44]) == null ? void 0 : l.geometry), s[0] & /*style*/
      2 && (r.style = /*style*/
      i[1]), t.$set(r);
    },
    i(i) {
      n || (Y(t.$$.fragment, i), n = !0);
    },
    o(i) {
      C(t.$$.fragment, i), n = !1;
    },
    d(i) {
      $(t, i);
    }
  };
}
function Nt(e) {
  let t, n, o, i;
  const s = [Ai, Ei, bi], r = [];
  function l(a, c) {
    var u, f, h;
    return (
      /*selector*/
      ((u = a[44]) == null ? void 0 : u.type) === F.ELLIPSE ? 0 : (
        /*selector*/
        ((f = a[44]) == null ? void 0 : f.type) === F.RECTANGLE ? 1 : (
          /*selector*/
          ((h = a[44]) == null ? void 0 : h.type) === F.POLYGON ? 2 : -1
        )
      )
    );
  }
  return ~(t = l(e)) && (n = r[t] = s[t](e)), {
    c() {
      n && n.c(), o = le();
    },
    m(a, c) {
      ~t && r[t].m(a, c), B(a, o, c), i = !0;
    },
    p(a, c) {
      let u = t;
      t = l(a), t === u ? ~t && r[t].p(a, c) : (n && (se(), C(r[u], 1, 1, () => {
        r[u] = null;
      }), re()), ~t ? (n = r[t], n ? n.p(a, c) : (n = r[t] = s[t](a), n.c()), Y(n, 1), n.m(o.parentNode, o)) : n = null);
    },
    i(a) {
      i || (Y(n), i = !0);
    },
    o(a) {
      C(n), i = !1;
    },
    d(a) {
      a && O(o), ~t && r[t].d(a);
    }
  };
}
function Ut(e) {
  let t = Je(
    /*annotation*/
    e[41]
  ) && !/*isEditable*/
  e[8](
    /*annotation*/
    e[41]
  ), n, o, i = t && Rt(lt(e));
  return {
    c() {
      i && i.c(), n = le();
    },
    m(s, r) {
      i && i.m(s, r), B(s, n, r), o = !0;
    },
    p(s, r) {
      r[0] & /*$store, isEditable*/
      33024 && (t = Je(
        /*annotation*/
        s[41]
      ) && !/*isEditable*/
      s[8](
        /*annotation*/
        s[41]
      )), t ? i ? (i.p(lt(s), r), r[0] & /*$store, isEditable*/
      33024 && Y(i, 1)) : (i = Rt(lt(s)), i.c(), Y(i, 1), i.m(n.parentNode, n)) : i && (se(), C(i, 1, 1, () => {
        i = null;
      }), re());
    },
    i(s) {
      o || (Y(i), o = !0);
    },
    o(s) {
      C(i), o = !1;
    },
    d(s) {
      s && O(n), i && i.d(s);
    }
  };
}
function Vt(e) {
  let t, n, o, i;
  const s = [Ti, Si], r = [];
  function l(a, c) {
    return (
      /*editableAnnotations*/
      a[7] ? 0 : (
        /*tool*/
        a[13] && /*drawingEnabled*/
        a[0] ? 1 : -1
      )
    );
  }
  return ~(t = l(e)) && (n = r[t] = s[t](e)), {
    c() {
      n && n.c(), o = le();
    },
    m(a, c) {
      ~t && r[t].m(a, c), B(a, o, c), i = !0;
    },
    p(a, c) {
      let u = t;
      t = l(a), t === u ? ~t && r[t].p(a, c) : (n && (se(), C(r[u], 1, 1, () => {
        r[u] = null;
      }), re()), ~t ? (n = r[t], n ? n.p(a, c) : (n = r[t] = s[t](a), n.c()), Y(n, 1), n.m(o.parentNode, o)) : n = null);
    },
    i(a) {
      i || (Y(n), i = !0);
    },
    o(a) {
      C(n), i = !1;
    },
    d(a) {
      a && O(o), ~t && r[t].d(a);
    }
  };
}
function Si(e) {
  let t = (
    /*toolName*/
    e[2]
  ), n, o, i = Gt(e);
  return {
    c() {
      i.c(), n = le();
    },
    m(s, r) {
      i.m(s, r), B(s, n, r), o = !0;
    },
    p(s, r) {
      r[0] & /*toolName*/
      4 && Q(t, t = /*toolName*/
      s[2]) ? (se(), C(i, 1, 1, j), re(), i = Gt(s), i.c(), Y(i, 1), i.m(n.parentNode, n)) : i.p(s, r);
    },
    i(s) {
      o || (Y(i), o = !0);
    },
    o(s) {
      C(i), o = !1;
    },
    d(s) {
      s && O(n), i.d(s);
    }
  };
}
function Ti(e) {
  let t, n, o = Le(
    /*editableAnnotations*/
    e[7]
  ), i = [];
  for (let r = 0; r < o.length; r += 1)
    i[r] = Ht(Ct(e, o, r));
  const s = (r) => C(i[r], 1, 1, () => {
    i[r] = null;
  });
  return {
    c() {
      for (let r = 0; r < i.length; r += 1)
        i[r].c();
      t = le();
    },
    m(r, l) {
      for (let a = 0; a < i.length; a += 1)
        i[a] && i[a].m(r, l);
      B(r, t, l), n = !0;
    },
    p(r, l) {
      if (l[0] & /*editableAnnotations, drawingEl, getEditor, style, transform, $scale, onChangeSelected*/
      10553506) {
        o = Le(
          /*editableAnnotations*/
          r[7]
        );
        let a;
        for (a = 0; a < o.length; a += 1) {
          const c = Ct(r, o, a);
          i[a] ? (i[a].p(c, l), Y(i[a], 1)) : (i[a] = Ht(c), i[a].c(), Y(i[a], 1), i[a].m(t.parentNode, t));
        }
        for (se(), a = o.length; a < i.length; a += 1)
          s(a);
        re();
      }
    },
    i(r) {
      if (!n) {
        for (let l = 0; l < o.length; l += 1)
          Y(i[l]);
        n = !0;
      }
    },
    o(r) {
      i = i.filter(Boolean);
      for (let l = 0; l < i.length; l += 1)
        C(i[l]);
      n = !1;
    },
    d(r) {
      r && O(t), gt(i, r);
    }
  };
}
function Gt(e) {
  let t, n;
  return t = new Qo({
    props: {
      target: (
        /*drawingEl*/
        e[5]
      ),
      tool: (
        /*tool*/
        e[13]
      ),
      drawingMode: (
        /*drawingMode*/
        e[12]
      ),
      transform: (
        /*transform*/
        e[11]
      ),
      viewportScale: (
        /*$scale*/
        e[16]
      )
    }
  }), t.$on(
    "create",
    /*onSelectionCreated*/
    e[20]
  ), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      const s = {};
      i[0] & /*drawingEl*/
      32 && (s.target = /*drawingEl*/
      o[5]), i[0] & /*tool*/
      8192 && (s.tool = /*tool*/
      o[13]), i[0] & /*drawingMode*/
      4096 && (s.drawingMode = /*drawingMode*/
      o[12]), i[0] & /*transform*/
      2048 && (s.transform = /*transform*/
      o[11]), i[0] & /*$scale*/
      65536 && (s.viewportScale = /*$scale*/
      o[16]), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function jt(e) {
  let t = (
    /*editable*/
    e[37].id
  ), n, o, i = zt(e);
  return {
    c() {
      i.c(), n = le();
    },
    m(s, r) {
      i.m(s, r), B(s, n, r), o = !0;
    },
    p(s, r) {
      r[0] & /*editableAnnotations*/
      128 && Q(t, t = /*editable*/
      s[37].id) ? (se(), C(i, 1, 1, j), re(), i = zt(s), i.c(), Y(i, 1), i.m(n.parentNode, n)) : i.p(s, r);
    },
    i(s) {
      o || (Y(i), o = !0);
    },
    o(s) {
      C(i), o = !1;
    },
    d(s) {
      s && O(n), i.d(s);
    }
  };
}
function zt(e) {
  let t, n;
  return t = new Ko({
    props: {
      target: (
        /*drawingEl*/
        e[5]
      ),
      editor: (
        /*getEditor*/
        e[23](
          /*editable*/
          e[37].target.selector
        )
      ),
      annotation: (
        /*editable*/
        e[37]
      ),
      style: (
        /*style*/
        e[1]
      ),
      transform: (
        /*transform*/
        e[11]
      ),
      viewportScale: (
        /*$scale*/
        e[16]
      )
    }
  }), t.$on("change", function() {
    W(
      /*onChangeSelected*/
      e[21](
        /*editable*/
        e[37]
      )
    ) && e[21](
      /*editable*/
      e[37]
    ).apply(this, arguments);
  }), {
    c() {
      ee(t.$$.fragment);
    },
    m(o, i) {
      x(t, o, i), n = !0;
    },
    p(o, i) {
      e = o;
      const s = {};
      i[0] & /*drawingEl*/
      32 && (s.target = /*drawingEl*/
      e[5]), i[0] & /*editableAnnotations*/
      128 && (s.editor = /*getEditor*/
      e[23](
        /*editable*/
        e[37].target.selector
      )), i[0] & /*editableAnnotations*/
      128 && (s.annotation = /*editable*/
      e[37]), i[0] & /*style*/
      2 && (s.style = /*style*/
      e[1]), i[0] & /*transform*/
      2048 && (s.transform = /*transform*/
      e[11]), i[0] & /*$scale*/
      65536 && (s.viewportScale = /*$scale*/
      e[16]), t.$set(s);
    },
    i(o) {
      n || (Y(t.$$.fragment, o), n = !0);
    },
    o(o) {
      C(t.$$.fragment, o), n = !1;
    },
    d(o) {
      $(t, o);
    }
  };
}
function Ht(e) {
  let t, n, o = (
    /*editor*/
    e[38] && jt(e)
  );
  return {
    c() {
      o && o.c(), t = le();
    },
    m(i, s) {
      o && o.m(i, s), B(i, t, s), n = !0;
    },
    p(i, s) {
      /*editor*/
      i[38] ? o ? (o.p(i, s), s[0] & /*editableAnnotations*/
      128 && Y(o, 1)) : (o = jt(i), o.c(), Y(o, 1), o.m(t.parentNode, t)) : o && (se(), C(o, 1, 1, () => {
        o = null;
      }), re());
    },
    i(i) {
      n || (Y(o), n = !0);
    },
    o(i) {
      C(o), n = !1;
    },
    d(i) {
      i && O(t), o && o.d(i);
    }
  };
}
function vi(e) {
  let t, n, o, i, s, r, l = Le(
    /*$store*/
    e[15].filter(
      /*func*/
      e[32]
    )
  ), a = [];
  for (let f = 0; f < l.length; f += 1)
    a[f] = Ut(Xt(e, l, f));
  const c = (f) => C(a[f], 1, 1, () => {
    a[f] = null;
  });
  let u = (
    /*drawingEl*/
    e[5] && Vt(e)
  );
  return {
    c() {
      t = X("svg"), n = X("g");
      for (let f = 0; f < a.length; f += 1)
        a[f].c();
      o = X("g"), u && u.c(), d(o, "class", "drawing"), d(t, "class", "a9s-annotationlayer"), pe(
        t,
        "drawing",
        /*tool*/
        e[13]
      ), pe(t, "hidden", !/*visible*/
      e[3]), pe(
        t,
        "hover",
        /*$hover*/
        e[14]
      );
    },
    m(f, h) {
      B(f, t, h), he(t, n);
      for (let g = 0; g < a.length; g += 1)
        a[g] && a[g].m(n, null);
      he(t, o), u && u.m(o, null), e[33](o), e[34](t), i = !0, s || (r = [
        H(t, "pointerup", function() {
          W(
            /*onPointerUp*/
            e[9]
          ) && e[9].apply(this, arguments);
        }),
        H(t, "pointerdown", function() {
          W(
            /*onPointerDown*/
            e[10]
          ) && e[10].apply(this, arguments);
        }),
        H(
          t,
          "pointermove",
          /*onPointerMove*/
          e[22]
        )
      ], s = !0);
    },
    p(f, h) {
      if (e = f, h[0] & /*$store, style, isEditable*/
      33026) {
        l = Le(
          /*$store*/
          e[15].filter(
            /*func*/
            e[32]
          )
        );
        let g;
        for (g = 0; g < l.length; g += 1) {
          const m = Xt(e, l, g);
          a[g] ? (a[g].p(m, h), Y(a[g], 1)) : (a[g] = Ut(m), a[g].c(), Y(a[g], 1), a[g].m(n, null));
        }
        for (se(), g = l.length; g < a.length; g += 1)
          c(g);
        re();
      }
      /*drawingEl*/
      e[5] ? u ? (u.p(e, h), h[0] & /*drawingEl*/
      32 && Y(u, 1)) : (u = Vt(e), u.c(), Y(u, 1), u.m(o, null)) : u && (se(), C(u, 1, 1, () => {
        u = null;
      }), re()), (!i || h[0] & /*tool*/
      8192) && pe(
        t,
        "drawing",
        /*tool*/
        e[13]
      ), (!i || h[0] & /*visible*/
      8) && pe(t, "hidden", !/*visible*/
      e[3]), (!i || h[0] & /*$hover*/
      16384) && pe(
        t,
        "hover",
        /*$hover*/
        e[14]
      );
    },
    i(f) {
      if (!i) {
        for (let h = 0; h < l.length; h += 1)
          Y(a[h]);
        Y(u), i = !0;
      }
    },
    o(f) {
      a = a.filter(Boolean);
      for (let h = 0; h < a.length; h += 1)
        C(a[h]);
      C(u), i = !1;
    },
    d(f) {
      f && O(t), gt(a, f), u && u.d(), e[33](null), e[34](null), s = !1, ge(r);
    }
  };
}
function Mi(e, t, n) {
  let o, i, s, r, l, a, c, u, f, h, g, m = j, w = () => (m(), m = Jt(b, (k) => n(16, g = k)), b);
  e.$$.on_destroy.push(() => m());
  let { drawingEnabled: T } = t, { image: y } = t, { preferredDrawingMode: p } = t, { state: _ } = t, { style: E = void 0 } = t, { toolName: I = cn()[0] } = t, { user: R } = t, { visible: U = !0 } = t;
  const V = () => I, Z = () => T;
  let A, S, b;
  Ne(() => w(n(6, b = Do(y, S))));
  const { hover: v, selection: P, store: D } = _;
  xe(e, v, (k) => n(14, u = k)), xe(e, P, (k) => n(31, f = k)), xe(e, D, (k) => n(15, h = k));
  let z, oe;
  const ae = (k) => {
    z && D.unobserve(z);
    const J = k.filter(({ editable: L }) => L).map(({ id: L }) => L);
    J.length > 0 ? (n(7, oe = J.map((L) => D.getAnnotation(L)).filter((L) => L && Je(L))), z = (L) => {
      const { updated: M } = L.changes;
      n(7, oe = M == null ? void 0 : M.map((de) => de.newValue));
    }, D.observe(z, { annotations: J })) : n(7, oe = void 0);
  }, Ie = (k) => {
    const J = tn(), L = {
      id: J,
      bodies: [],
      target: {
        annotation: J,
        selector: k.detail,
        creator: R,
        created: /* @__PURE__ */ new Date()
      }
    };
    D.addAnnotation(L), P.setSelected(L.id);
  }, ce = (k) => (J) => {
    var _e;
    const { target: L } = k, M = 10 * 60 * 1e3, de = ((_e = L.creator) == null ? void 0 : _e.id) !== R.id || !L.created || (/* @__PURE__ */ new Date()).getTime() - L.created.getTime() > M;
    D.updateTarget({
      ...L,
      selector: J.detail,
      created: de ? L.created : /* @__PURE__ */ new Date(),
      updated: de ? /* @__PURE__ */ new Date() : void 0,
      updatedBy: de ? R : void 0
    });
  }, Oe = (k) => {
    const { x: J, y: L } = un(k, S), M = D.getAt(J, L);
    M ? u !== M.id && v.set(M.id) : v.set(void 0);
  }, fe = (k) => jo(k), Be = (k) => Je(k);
  function ue(k) {
    qe[k ? "unshift" : "push"](() => {
      A = k, n(5, A);
    });
  }
  function N(k) {
    qe[k ? "unshift" : "push"](() => {
      S = k, n(4, S);
    });
  }
  return e.$$set = (k) => {
    "drawingEnabled" in k && n(0, T = k.drawingEnabled), "image" in k && n(24, y = k.image), "preferredDrawingMode" in k && n(25, p = k.preferredDrawingMode), "state" in k && n(26, _ = k.state), "style" in k && n(1, E = k.style), "toolName" in k && n(2, I = k.toolName), "user" in k && n(27, R = k.user), "visible" in k && n(3, U = k.visible);
  }, e.$$.update = () => {
    e.$$.dirty[0] & /*toolName*/
    4 && n(13, { tool: o, opts: i } = fn(I) || { tool: void 0, opts: void 0 }, o, (n(30, i), n(2, I))), e.$$.dirty[0] & /*opts, preferredDrawingMode*/
    1107296256 && n(12, s = (i == null ? void 0 : i.drawingMode) || p), e.$$.dirty[0] & /*svgEl*/
    16 && n(11, r = yi(S)), e.$$.dirty[0] & /*svgEl*/
    16 && n(10, { onPointerDown: l, onPointerUp: a } = wi(S, D), l, (n(9, a), n(4, S))), e.$$.dirty[1] & /*$selection*/
    1 && n(8, c = (k) => f.selected.find((J) => J.id === k.id && J.editable)), e.$$.dirty[1] & /*$selection*/
    1 && ae(f.selected);
  }, [
    T,
    E,
    I,
    U,
    S,
    A,
    b,
    oe,
    c,
    a,
    l,
    r,
    s,
    o,
    u,
    h,
    g,
    v,
    P,
    D,
    Ie,
    ce,
    Oe,
    fe,
    y,
    p,
    _,
    R,
    V,
    Z,
    i,
    f,
    Be,
    ue,
    N
  ];
}
class Li extends ne {
  constructor(t) {
    super(), te(
      this,
      t,
      Mi,
      vi,
      Q,
      {
        drawingEnabled: 0,
        image: 24,
        preferredDrawingMode: 25,
        state: 26,
        style: 1,
        toolName: 2,
        user: 27,
        visible: 3,
        getDrawingTool: 28,
        isDrawingEnabled: 29
      },
      null,
      [-1, -1]
    );
  }
  get getDrawingTool() {
    return this.$$.ctx[28];
  }
  get isDrawingEnabled() {
    return this.$$.ctx[29];
  }
}
function dn(e, t, n = 0, o = e.length - 1, i = ki) {
  for (; o > n; ) {
    if (o - n > 600) {
      const a = o - n + 1, c = t - n + 1, u = Math.log(a), f = 0.5 * Math.exp(2 * u / 3), h = 0.5 * Math.sqrt(u * f * (a - f) / a) * (c - a / 2 < 0 ? -1 : 1), g = Math.max(n, Math.floor(t - c * f / a + h)), m = Math.min(o, Math.floor(t + (a - c) * f / a + h));
      dn(e, t, g, m, i);
    }
    const s = e[t];
    let r = n, l = o;
    for (De(e, n, t), i(e[o], s) > 0 && De(e, n, o); r < l; ) {
      for (De(e, r, l), r++, l--; i(e[r], s) < 0; ) r++;
      for (; i(e[l], s) > 0; ) l--;
    }
    i(e[n], s) === 0 ? De(e, n, l) : (l++, De(e, l, o)), l <= t && (n = l + 1), t <= l && (o = l - 1);
  }
}
function De(e, t, n) {
  const o = e[t];
  e[t] = e[n], e[n] = o;
}
function ki(e, t) {
  return e < t ? -1 : e > t ? 1 : 0;
}
class Ii {
  constructor(t = 9) {
    this._maxEntries = Math.max(4, t), this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4)), this.clear();
  }
  all() {
    return this._all(this.data, []);
  }
  search(t) {
    let n = this.data;
    const o = [];
    if (!ze(t, n)) return o;
    const i = this.toBBox, s = [];
    for (; n; ) {
      for (let r = 0; r < n.children.length; r++) {
        const l = n.children[r], a = n.leaf ? i(l) : l;
        ze(t, a) && (n.leaf ? o.push(l) : ct(t, a) ? this._all(l, o) : s.push(l));
      }
      n = s.pop();
    }
    return o;
  }
  collides(t) {
    let n = this.data;
    if (!ze(t, n)) return !1;
    const o = [];
    for (; n; ) {
      for (let i = 0; i < n.children.length; i++) {
        const s = n.children[i], r = n.leaf ? this.toBBox(s) : s;
        if (ze(t, r)) {
          if (n.leaf || ct(t, r)) return !0;
          o.push(s);
        }
      }
      n = o.pop();
    }
    return !1;
  }
  load(t) {
    if (!(t && t.length)) return this;
    if (t.length < this._minEntries) {
      for (let o = 0; o < t.length; o++)
        this.insert(t[o]);
      return this;
    }
    let n = this._build(t.slice(), 0, t.length - 1, 0);
    if (!this.data.children.length)
      this.data = n;
    else if (this.data.height === n.height)
      this._splitRoot(this.data, n);
    else {
      if (this.data.height < n.height) {
        const o = this.data;
        this.data = n, n = o;
      }
      this._insert(n, this.data.height - n.height - 1, !0);
    }
    return this;
  }
  insert(t) {
    return t && this._insert(t, this.data.height - 1), this;
  }
  clear() {
    return this.data = ve([]), this;
  }
  remove(t, n) {
    if (!t) return this;
    let o = this.data;
    const i = this.toBBox(t), s = [], r = [];
    let l, a, c;
    for (; o || s.length; ) {
      if (o || (o = s.pop(), a = s[s.length - 1], l = r.pop(), c = !0), o.leaf) {
        const u = Oi(t, o.children, n);
        if (u !== -1)
          return o.children.splice(u, 1), s.push(o), this._condense(s), this;
      }
      !c && !o.leaf && ct(o, i) ? (s.push(o), r.push(l), l = 0, a = o, o = o.children[0]) : a ? (l++, o = a.children[l], c = !1) : o = null;
    }
    return this;
  }
  toBBox(t) {
    return t;
  }
  compareMinX(t, n) {
    return t.minX - n.minX;
  }
  compareMinY(t, n) {
    return t.minY - n.minY;
  }
  toJSON() {
    return this.data;
  }
  fromJSON(t) {
    return this.data = t, this;
  }
  _all(t, n) {
    const o = [];
    for (; t; )
      t.leaf ? n.push(...t.children) : o.push(...t.children), t = o.pop();
    return n;
  }
  _build(t, n, o, i) {
    const s = o - n + 1;
    let r = this._maxEntries, l;
    if (s <= r)
      return l = ve(t.slice(n, o + 1)), Se(l, this.toBBox), l;
    i || (i = Math.ceil(Math.log(s) / Math.log(r)), r = Math.ceil(s / Math.pow(r, i - 1))), l = ve([]), l.leaf = !1, l.height = i;
    const a = Math.ceil(s / r), c = a * Math.ceil(Math.sqrt(r));
    Ft(t, n, o, c, this.compareMinX);
    for (let u = n; u <= o; u += c) {
      const f = Math.min(u + c - 1, o);
      Ft(t, u, f, a, this.compareMinY);
      for (let h = u; h <= f; h += a) {
        const g = Math.min(h + a - 1, f);
        l.children.push(this._build(t, h, g, i - 1));
      }
    }
    return Se(l, this.toBBox), l;
  }
  _chooseSubtree(t, n, o, i) {
    for (; i.push(n), !(n.leaf || i.length - 1 === o); ) {
      let s = 1 / 0, r = 1 / 0, l;
      for (let a = 0; a < n.children.length; a++) {
        const c = n.children[a], u = at(c), f = Yi(t, c) - u;
        f < r ? (r = f, s = u < s ? u : s, l = c) : f === r && u < s && (s = u, l = c);
      }
      n = l || n.children[0];
    }
    return n;
  }
  _insert(t, n, o) {
    const i = o ? t : this.toBBox(t), s = [], r = this._chooseSubtree(i, this.data, n, s);
    for (r.children.push(t), Ce(r, i); n >= 0 && s[n].children.length > this._maxEntries; )
      this._split(s, n), n--;
    this._adjustParentBBoxes(i, s, n);
  }
  // split overflowed node into two
  _split(t, n) {
    const o = t[n], i = o.children.length, s = this._minEntries;
    this._chooseSplitAxis(o, s, i);
    const r = this._chooseSplitIndex(o, s, i), l = ve(o.children.splice(r, o.children.length - r));
    l.height = o.height, l.leaf = o.leaf, Se(o, this.toBBox), Se(l, this.toBBox), n ? t[n - 1].children.push(l) : this._splitRoot(o, l);
  }
  _splitRoot(t, n) {
    this.data = ve([t, n]), this.data.height = t.height + 1, this.data.leaf = !1, Se(this.data, this.toBBox);
  }
  _chooseSplitIndex(t, n, o) {
    let i, s = 1 / 0, r = 1 / 0;
    for (let l = n; l <= o - n; l++) {
      const a = Pe(t, 0, l, this.toBBox), c = Pe(t, l, o, this.toBBox), u = Pi(a, c), f = at(a) + at(c);
      u < s ? (s = u, i = l, r = f < r ? f : r) : u === s && f < r && (r = f, i = l);
    }
    return i || o - n;
  }
  // sorts node children by the best axis for split
  _chooseSplitAxis(t, n, o) {
    const i = t.leaf ? this.compareMinX : Bi, s = t.leaf ? this.compareMinY : Di, r = this._allDistMargin(t, n, o, i), l = this._allDistMargin(t, n, o, s);
    r < l && t.children.sort(i);
  }
  // total margin of all possible split distributions where each node is at least m full
  _allDistMargin(t, n, o, i) {
    t.children.sort(i);
    const s = this.toBBox, r = Pe(t, 0, n, s), l = Pe(t, o - n, o, s);
    let a = je(r) + je(l);
    for (let c = n; c < o - n; c++) {
      const u = t.children[c];
      Ce(r, t.leaf ? s(u) : u), a += je(r);
    }
    for (let c = o - n - 1; c >= n; c--) {
      const u = t.children[c];
      Ce(l, t.leaf ? s(u) : u), a += je(l);
    }
    return a;
  }
  _adjustParentBBoxes(t, n, o) {
    for (let i = o; i >= 0; i--)
      Ce(n[i], t);
  }
  _condense(t) {
    for (let n = t.length - 1, o; n >= 0; n--)
      t[n].children.length === 0 ? n > 0 ? (o = t[n - 1].children, o.splice(o.indexOf(t[n]), 1)) : this.clear() : Se(t[n], this.toBBox);
  }
}
function Oi(e, t, n) {
  if (!n) return t.indexOf(e);
  for (let o = 0; o < t.length; o++)
    if (n(e, t[o])) return o;
  return -1;
}
function Se(e, t) {
  Pe(e, 0, e.children.length, t, e);
}
function Pe(e, t, n, o, i) {
  i || (i = ve(null)), i.minX = 1 / 0, i.minY = 1 / 0, i.maxX = -1 / 0, i.maxY = -1 / 0;
  for (let s = t; s < n; s++) {
    const r = e.children[s];
    Ce(i, e.leaf ? o(r) : r);
  }
  return i;
}
function Ce(e, t) {
  return e.minX = Math.min(e.minX, t.minX), e.minY = Math.min(e.minY, t.minY), e.maxX = Math.max(e.maxX, t.maxX), e.maxY = Math.max(e.maxY, t.maxY), e;
}
function Bi(e, t) {
  return e.minX - t.minX;
}
function Di(e, t) {
  return e.minY - t.minY;
}
function at(e) {
  return (e.maxX - e.minX) * (e.maxY - e.minY);
}
function je(e) {
  return e.maxX - e.minX + (e.maxY - e.minY);
}
function Yi(e, t) {
  return (Math.max(t.maxX, e.maxX) - Math.min(t.minX, e.minX)) * (Math.max(t.maxY, e.maxY) - Math.min(t.minY, e.minY));
}
function Pi(e, t) {
  const n = Math.max(e.minX, t.minX), o = Math.max(e.minY, t.minY), i = Math.min(e.maxX, t.maxX), s = Math.min(e.maxY, t.maxY);
  return Math.max(0, i - n) * Math.max(0, s - o);
}
function ct(e, t) {
  return e.minX <= t.minX && e.minY <= t.minY && t.maxX <= e.maxX && t.maxY <= e.maxY;
}
function ze(e, t) {
  return t.minX <= e.maxX && t.minY <= e.maxY && t.maxX >= e.minX && t.maxY >= e.minY;
}
function ve(e) {
  return {
    children: e,
    height: 1,
    leaf: !0,
    minX: 1 / 0,
    minY: 1 / 0,
    maxX: -1 / 0,
    maxY: -1 / 0
  };
}
function Ft(e, t, n, o, i) {
  const s = [t, n];
  for (; s.length; ) {
    if (n = s.pop(), t = s.pop(), n - t <= o) continue;
    const r = t + Math.ceil((n - t) / o / 2) * o;
    dn(e, r, t, n, i), s.push(t, r, r, n);
  }
}
const Ci = () => {
  const e = new Ii(), t = /* @__PURE__ */ new Map(), n = () => [...t.values()], o = () => {
    e.clear(), t.clear();
  }, i = (f) => {
    if (!Fe(f)) return;
    const { minX: h, minY: g, maxX: m, maxY: w } = f.selector.geometry.bounds, T = { minX: h, minY: g, maxX: m, maxY: w, target: f };
    e.insert(T), t.set(f.annotation, T);
  }, s = (f) => {
    if (!Fe(f)) return;
    const h = t.get(f.annotation);
    h && e.remove(h), t.delete(f.annotation);
  };
  return {
    all: n,
    clear: o,
    getAt: (f, h) => {
      const m = e.search({
        minX: f,
        minY: h,
        maxX: f,
        maxY: h
      }).map((w) => w.target).filter((w) => w.selector.type === F.RECTANGLE || kn(w.selector, f, h));
      if (m.length > 0)
        return m.sort((w, T) => ht(w.selector) - ht(T.selector)), m[0];
    },
    getIntersecting: (f, h, g, m) => e.search({
      minX: f,
      minY: h,
      maxX: f + g,
      maxY: h + m
    }).map((w) => w.target),
    insert: i,
    remove: s,
    set: (f, h = !0) => {
      h && o();
      const g = f.reduce((m, w) => {
        if (Fe(w)) {
          const { minX: T, minY: y, maxX: p, maxY: _ } = w.selector.geometry.bounds;
          return [...m, { minX: T, minY: y, maxX: p, maxY: _, target: w }];
        } else
          return m;
      }, []);
      g.forEach((m) => t.set(m.target.annotation, m)), e.load(g);
    },
    size: () => e.all().length,
    update: (f, h) => {
      s(f), i(h);
    }
  };
}, Xi = (e) => {
  const t = io(), n = Ci(), o = Wn(t, e.userSelectAction, e.adapter), i = Fn(t), s = co();
  return t.observe(({ changes: a }) => {
    n.set((a.created || []).map((c) => c.target), !1), (a.deleted || []).forEach((c) => n.remove(c.target)), (a.updated || []).forEach(({ oldValue: c, newValue: u }) => n.update(c.target, u.target));
  }), {
    store: {
      ...t,
      getAt: (a, c) => {
        const u = n.getAt(a, c);
        return u ? t.getAnnotation(u.annotation) : void 0;
      },
      getIntersecting: (a, c, u, f) => n.getIntersecting(a, c, u, f).map((h) => t.getAnnotation(h.annotation))
    },
    selection: o,
    hover: i,
    viewport: s
  };
}, Ri = (e) => {
  const t = Xi(e);
  return {
    ...t,
    store: so(t.store)
  };
}, Ni = (e) => {
  let t, n;
  if (e.nodeName === "CANVAS")
    t = e, n = t.getContext("2d", { willReadFrequently: !0 });
  else {
    const i = e;
    t = document.createElement("canvas"), t.width = i.width, t.height = i.height, n = t.getContext("2d", { willReadFrequently: !0 }), n.drawImage(i, 0, 0, i.width, i.height);
  }
  let o = 0;
  for (let i = 1; i < 10; i++)
    for (let s = 1; s < 10; s++) {
      const r = Math.round(s * t.width / 10), l = Math.round(i * t.height / 10), a = n.getImageData(r, l, 1, 1).data, c = (0.299 * a[0] + 0.587 * a[1] + 0.114 * a[2]) / 255;
      o += c;
    }
  return o / 81;
}, Ui = (e) => {
  const t = Ni(e), n = t > 0.6 ? "dark" : "light";
  return console.log(`[Annotorious] Image brightness: ${t.toFixed(1)}. Setting ${n} theme.`), n;
}, Wt = (e, t, n) => t.setAttribute("data-theme", n === "auto" ? Ui(e) : n), Vi = (e, t) => ({
  ...e,
  drawingEnabled: e.drawingEnabled === void 0 ? t.drawingEnabled : e.drawingEnabled,
  drawingMode: e.drawingMode || t.drawingMode,
  userSelectAction: e.userSelectAction || t.userSelectAction,
  theme: e.theme || t.theme
}), qt = typeof navigator > "u" ? !1 : navigator.userAgent.indexOf("Mac OS X") !== -1, Gi = (e, t) => {
  const n = t || document, o = (r) => {
    const l = r;
    l.key === "z" && l.ctrlKey ? e.undo() : l.key === "y" && l.ctrlKey && e.redo();
  }, i = (r) => {
    const l = r;
    l.key === "z" && l.metaKey && (l.shiftKey ? e.redo() : e.undo());
  }, s = () => {
    qt ? n.removeEventListener("keydown", i) : n.removeEventListener("keydown", o);
  };
  return qt ? n.addEventListener("keydown", i) : n.addEventListener("keydown", o), {
    destroy: s
  };
}, Ji = (e, t = {}) => {
  if (!e)
    throw "Missing argument: image";
  const n = typeof e == "string" ? document.getElementById(e) : e, o = Vi(t, {
    drawingEnabled: !0,
    drawingMode: "drag",
    userSelectAction: nn.EDIT,
    theme: "light"
  }), i = Ri(o), { selection: s, store: r } = i, l = ao(r), a = fo(
    i,
    l,
    o.adapter,
    o.autoSave
  ), c = document.createElement("DIV");
  c.style.position = "relative", c.style.display = "inline-block", n.style.display = "block", n.parentNode.insertBefore(c, n), c.appendChild(n);
  const u = Gi(l);
  let f = wo();
  Wt(n, c, o.theme);
  const h = new Li({
    target: c,
    props: {
      drawingEnabled: !!o.drawingEnabled,
      image: n,
      preferredDrawingMode: o.drawingMode,
      state: i,
      style: o.style,
      user: f
    }
  });
  h.$on("click", (b) => {
    const { originalEvent: v, annotation: P } = b.detail;
    P ? s.userSelect(P.id, v) : s.isEmpty() || s.clear();
  });
  const g = ho(i, l, o.adapter), m = () => {
    h.$set({ drawingEnabled: !1 }), setTimeout(() => h.$set({ drawingEnabled: !0 }), 1);
  }, w = () => {
    h.$destroy(), c.parentNode.insertBefore(n, c), c.parentNode.removeChild(c), u.destroy(), l.destroy();
  }, T = () => h.getDrawingTool(), y = () => f, p = () => h.isDrawingEnabled(), _ = (b, v, P) => si(b, v, P), E = (b, v) => zo(b, v), I = (b) => {
    if (!fn(b))
      throw `No drawing tool named ${b}`;
    h.$set({ toolName: b });
  }, R = (b) => h.$set({ drawingEnabled: b }), U = (b) => {
    console.warn("Filter not implemented yet");
  }, V = (b) => h.$set({ style: b }), Z = (b) => Wt(n, c, b), A = (b) => {
    f = b, h.$set({ user: b });
  }, S = (b) => (
    // @ts-ignore
    h.$set({ visible: b })
  );
  return {
    ...g,
    cancelDrawing: m,
    destroy: w,
    getDrawingTool: T,
    getUser: y,
    isDrawingEnabled: p,
    listDrawingTools: cn,
    on: a.on,
    off: a.off,
    registerDrawingTool: _,
    registerShapeEditor: E,
    setDrawingEnabled: R,
    setDrawingTool: I,
    setFilter: U,
    setStyle: V,
    setTheme: Z,
    setUser: A,
    setVisible: S,
    element: c,
    state: i
  };
};
export {
  an as Editor,
  Ko as EditorMount,
  Ye as Handle,
  Ki as IdentityTransform,
  Io as PolygonEditor,
  Go as RectangleEditor,
  Bn as RectangleUtil,
  $o as RubberbandRectangle,
  Li as SVGAnnotationLayer,
  F as ShapeType,
  Qo as ToolMount,
  nn as UserSelectAction,
  qi as W3CImageFormat,
  wi as addEventListeners,
  Ke as boundsFromPoints,
  Fi as chainStyles,
  ht as computeArea,
  Hi as computeStyle,
  zi as createBody,
  Ji as createImageAnnotator,
  Xi as createImageAnnotatorState,
  yi as createSVGTransform,
  Ri as createSvelteImageAnnotatorState,
  Wi as defaultColorProvider,
  Ui as detectTheme,
  st as distance,
  Do as enableResponsive,
  Vi as fillDefaults,
  jo as getEditor,
  un as getSVGPoint,
  fn as getTool,
  Gi as initKeyboardCommands,
  kn as intersects,
  Je as isImageAnnotation,
  Fe as isImageAnnotationTarget,
  qt as isMac,
  Yo as isTouch,
  cn as listDrawingTools,
  Dn as parseFragmentSelector,
  Nn as parseSVGSelector,
  To as parseW3CImageAnnotation,
  zo as registerEditor,
  pt as registerShapeUtil,
  si as registerTool,
  Ni as sampleBrightness,
  Yn as serializeFragmentSelector,
  Un as serializeSVGSelector,
  vo as serializeW3CImageAnnotation,
  Wt as setTheme
};
//# sourceMappingURL=annotorious.es.js.map
