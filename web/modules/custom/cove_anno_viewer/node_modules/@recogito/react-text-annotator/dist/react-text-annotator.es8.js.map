{"version":3,"file":"react-text-annotator.es8.js","sources":["../../../node_modules/CETEIcean/src/CETEI.js"],"sourcesContent":["import defaultBehaviors from './defaultBehaviors.js';\nimport * as utilities from './utilities.js';\nimport {addBehaviors, addBehavior, removeBehavior} from './behaviors.js';\nimport {learnElementNames, learnCustomElementNames} from './dom.js';\n\nclass CETEI {\n  constructor(options){\n    this.options = options ? options : {}\n\n    // Set a local reference to the Document object\n    // Determine document in this order of preference: options, window, global \n    this.document = this.options.documentObject ? this.options.documentObject : undefined\n    if (this.document === undefined) {\n      if (typeof window !== 'undefined' && window.document) {\n        this.document = window.document\n      } else if (typeof global !== 'undefined' && global.document) {\n        this.document = global.document\n      }\n    }\n\n    // Bind methods\n    this.addBehaviors = addBehaviors.bind(this);\n    this.addBehavior = addBehavior.bind(this);\n    this.removeBehavior = removeBehavior.bind(this);\n\n    // Bind selected utilities\n    this.utilities = {}\n    for (const u of Object.keys(utilities)) {\n      if ([\"getPrefixDef\", \"rw\", \"resolveURI\"].includes(u)) {\n        this.utilities[u] = utilities[u].bind(this);\n      } else {\n        this.utilities[u] = utilities[u];\n      }\n    }\n\n    // Set properties\n    this.els = [];\n    this.namespaces = new Map();\n    this.behaviors = {};\n    this.hasStyle = false;\n    this.prefixDefs = [];\n    this.debug = this.options.debug === true ? true : false;\n    this.discardContent = this.options.discardContent === true ? true : false;\n\n    if (this.options.base) {\n      this.base = this.options.base;\n    } else {\n      try {\n        if (window) {\n          this.base = window.location.href.replace(/\\/[^\\/]*$/, \"/\");\n        }\n      } catch (e) {\n        this.base = \"\";\n      }\n    }\n    if (!this.options.omitDefaultBehaviors) {\n      this.addBehaviors(defaultBehaviors);\n    }\n    if (this.options.ignoreFragmentId) {\n      if (window) {\n        window.removeEventListener(\"ceteiceanload\", CETEI.restorePosition);\n      }\n    }\n  }\n\n  /* \n    Returns a Promise that fetches an XML source document from the URL\n    provided in the first parameter and then calls the makeHTML5 method\n    on the returned document.\n  */\n  async getHTML5(XML_url, callback, perElementFn){\n    if (window && window.location.href.startsWith(this.base) && (XML_url.indexOf(\"/\") >= 0)) {\n      this.base = XML_url.replace(/\\/[^\\/]*$/, \"/\");\n    }\n    try {\n      const response = await fetch(XML_url);\n      if (response.ok) {\n        const XML = await response.text();\n        return this.makeHTML5(XML, callback, perElementFn);\n      } else {\n        console.log(`Could not get XML file ${XML_url}.\\nServer returned ${response.status}: ${response.statusText}`);\n      }\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  /* \n    Converts the supplied XML string into HTML5 Custom Elements. If a callback\n    function is supplied, calls it on the result.\n  */\n  makeHTML5(XML, callback, perElementFn){\n    // XML is assumed to be a string\n    this.XML_dom = ( new DOMParser() ).parseFromString(XML, \"text/xml\");\n    return this.domToHTML5(this.XML_dom, callback, perElementFn);\n  }\n\n  preprocess(XML_dom, callback, perElementFn) {\n    this.els = learnElementNames(XML_dom, this.namespaces);\n\n    let convertEl = (el) => {\n      // Elements with defined namespaces get the prefix mapped to that element. All others keep\n      // their namespaces and are copied as-is.\n      let newElement;\n      if (this.namespaces.has(el.namespaceURI ? el.namespaceURI : \"\")) {\n        let prefix = this.namespaces.get(el.namespaceURI ? el.namespaceURI : \"\");\n        newElement = this.document.createElement(`${prefix}-${el.localName.toLowerCase()}`);\n      } else {\n        newElement = this.document.importNode(el, false);\n      }\n      // Copy attributes; @xmlns, @xml:id, @xml:lang, and\n      // @rendition get special handling.\n      for (let att of Array.from(el.attributes)) {\n          if (att.name == \"xmlns\") {\n            //Strip default namespaces, but hang on to the values\n            newElement.setAttribute(\"data-xmlns\", att.value);\n          } else {\n            newElement.setAttribute(att.name, att.value);\n          }\n          if (att.name == \"xml:id\") {\n            newElement.setAttribute(\"id\", att.value);\n          }\n          if (att.name == \"xml:lang\") {\n            newElement.setAttribute(\"lang\", att.value);\n          }\n          if (att.name == \"rendition\") {\n            newElement.setAttribute(\"class\", att.value.replace(/#/g, \"\"));\n          }\n      }\n      // Preserve element name so we can use it later\n      newElement.setAttribute(\"data-origname\", el.localName);\n      if (el.hasAttributes()) {\n        newElement.setAttribute(\"data-origatts\", el.getAttributeNames().join(\" \"));\n      }\n      // If element is empty, flag it\n      if (el.childNodes.length == 0) {\n        newElement.setAttribute(\"data-empty\", \"\");\n      }\n      // <head> elements need to know their level\n      if (el.localName == \"head\") {\n        // 1 is XPathResult.NUMBER_TYPE\n        let level = XML_dom.evaluate(\"count(ancestor::*[tei:head])\", el, function(ns) {\n          if (ns == \"tei\") return \"http://www.tei-c.org/ns/1.0\";\n        }, 1, null);\n        newElement.setAttribute(\"data-level\", level.numberValue);\n      }\n      // Turn <rendition scheme=\"css\"> elements into HTML styles\n      if (el.localName == \"tagsDecl\") {\n        let style = this.document.createElement(\"style\");\n        for (let node of Array.from(el.childNodes)){\n          // nodeType 1 is Node.ELEMENT_NODE\n          if (node.nodeType == 1 && node.localName == \"rendition\" && node.getAttribute(\"scheme\") == \"css\") {\n            let rule = \"\";\n            if (node.hasAttribute(\"selector\")) {\n              //rewrite element names in selectors\n              rule += node.getAttribute(\"selector\").replace(/([^#, >]+\\w*)/g, \"tei-$1\").replace(/#tei-/g, \"#\") + \"{\\n\";\n              rule += node.textContent;\n            } else {\n              rule += \".\" + node.getAttribute(\"xml:id\") + \"{\\n\";\n              rule += node.textContent;\n            }\n            rule += \"\\n}\\n\";\n            style.appendChild(this.document.createTextNode(rule));\n          }\n        }\n        if (style.childNodes.length > 0) {\n          newElement.appendChild(style);\n          this.hasStyle = true;\n        }\n      }\n      // Get prefix definitions\n      if (el.localName == \"prefixDef\") {\n        this.prefixDefs.push(el.getAttribute(\"ident\"));\n        this.prefixDefs[el.getAttribute(\"ident\")] = {\n          \"matchPattern\": el.getAttribute(\"matchPattern\"),\n          \"replacementPattern\": el.getAttribute(\"replacementPattern\")\n        };\n      }\n      for (let node of Array.from(el.childNodes)) {\n          // Node.ELEMENT_NODE\n          if (node.nodeType == 1 ) {\n              newElement.appendChild(convertEl(node));\n          }\n          else {\n              newElement.appendChild(node.cloneNode());\n          }\n      }\n      if (perElementFn) {\n        perElementFn(newElement, el);\n      }\n      return newElement;\n    }\n\n    this.dom = this.document.createDocumentFragment();\n    for (let node of Array.from(XML_dom.childNodes)) {\n      // Node.ELEMENT_NODE\n      if (node.nodeType == 1) {\n        this.dom.appendChild(convertEl(node));\n      }\n      // Node.PROCESSING_INSTRUCTION_NODE\n      if (node.nodeType == 7) {\n        this.dom.appendChild(this.document.importNode(node, true));\n      }\n      // Node.COMMENT_NODE\n      if (node.nodeType == 8) {\n        this.dom.appendChild(this.document.importNode(node, true));\n      }\n    }\n    // DocumentFragments don't work in the same ways as other nodes, so use the root element.\n    this.utilities.dom = this.dom.firstElementChild;\n\n    if (callback) {\n      callback(this.dom, this);\n      if (window) {\n        window.dispatchEvent(ceteiceanLoad);\n      }\n    } else {\n      if (typeof window !== 'undefined') {\n        window.dispatchEvent(ceteiceanLoad);\n      }\n      return this.dom;\n    }\n  }\n\n  /* \n    Converts the supplied XML DOM into HTML5 Custom Elements. If a callback\n    function is supplied, calls it on the result.\n  */\n  domToHTML5(XML_dom, callback, perElementFn){\n\n    this.preprocess(XML_dom, null, perElementFn);\n\n    this.applyBehaviors();\n    this.done = true;\n    if (callback) {\n      callback(this.dom, this);\n      if (window) {\n        window.dispatchEvent(ceteiceanLoad);\n      }\n    } else {\n      if (typeof window !== 'undefined') {\n        window.dispatchEvent(ceteiceanLoad);\n      }\n      return this.dom;\n    }\n  }\n\n  /*\n    Convenience method for HTML pages containing pre-processed CETEIcean Custom \n    Elements. Usage:\n      const c = new CETEI();\n      c.processPage();\n  */\n  processPage() {\n    this.els = learnCustomElementNames(this.document);\n    this.applyBehaviors();\n    if (window) {\n      window.dispatchEvent(ceteiceanLoad);\n    }\n  }\n\n  /* \n    To change a namespace -> prefix mapping, the namespace must first be \n    unset. Takes a namespace URI. In order to process a TEI P4 document, e.g.,\n    the TEI namespace must be unset before it can be set to the empty string.\n  */\n  unsetNamespace(ns) {\n    this.namespaces.delete(ns);\n  }\n\n  /* \n    Sets the base URL for the document. Used to rewrite relative links in the\n    XML source (which may be in a completely different location from the HTML\n    wrapper).\n  */\n  setBaseUrl(base) {\n    this.base = base;\n  }\n\n  /* \n  Appends any element returned by the function passed in the first\n  parameter to the element in the second parameter. If the function\n  returns nothing, this is a no-op aside from any side effects caused\n  by the provided function.\n\n  Called by getHandler() and fallback()\n  */\nappend(fn, elt) {\n  let self = this;\n  if (elt && !elt.hasAttribute('data-processed')) {\n    let content = fn.call(self.utilities, elt);\n    if (content) {\n      self.appendBasic(elt, content);\n    }\n  } else {\n    return function() {\n      if (!this.hasAttribute(\"data-processed\")) {\n        let content = fn.call(self.utilities, this);\n        if (content) {\n          self.appendBasic(this, content);\n        }\n      }\n    }\n  }\n}\n\nappendBasic(elt, content) {\n  if (this.discardContent) {\n    elt.innerHTML = \"\";\n  } else {\n    utilities.hideContent(elt, true);\n  }\n  elt.appendChild(content);\n}\n\n// Given an element, return its qualified name as defined in a behaviors object\nbName(e) {\n  return e.tagName.substring(0,e.tagName.indexOf(\"-\")).toLowerCase() + \":\" + e.getAttribute(\"data-origname\");\n}\n\n/* \n  Private method called by append(). Takes a child element and a name, and recurses through the\n  child's siblings until an element with that name is found, returning true if it is and false if not.\n*/\nchildExists(elt, name) {\n  if (elt && elt.nodeName == name) {\n    return true;\n  } else {\n    return elt && elt.nextElementSibling && this.childExists(elt.nextElementSibling, name);\n  }\n}\n\n/* \n  Takes a template in the form of either an array of 1 or 2 \n  strings or an object with CSS selector keys and either functions\n  or arrays as described above. Returns a closure around a function \n  that can be called in the element constructor or applied to an \n  individual element. An empty array is considered a no-op.\n\n  Called by the getHandler() and getFallback() methods\n*/\ndecorator(template) {\n  if (Array.isArray(template) && template.length == 0) {\n    return function(e) {};\n  }\n  if (Array.isArray(template) && !Array.isArray(template[0])) {\n    return this.applyDecorator(template)\n  } \n  let self = this;\n  return function(elt) {\n    for (let rule of template) {\n      if (elt.matches(rule[0]) || rule[0] === \"_\") {\n        if (Array.isArray(rule[1])) {\n          return self.decorator(rule[1]).call(this, elt);\n        } else {\n          return rule[1].call(this, elt);\n        }\n      }\n    }\n  }\n}\n\napplyDecorator(strings) {\n  let self = this;\n  return function (elt) {\n    let copy = [];\n    for (let i = 0; i < strings.length; i++) {\n      copy.push(self.template(strings[i], elt));\n    }\n    return self.insert(elt, copy);\n  }\n}\n\n/* \n  Returns the fallback function for the given element name.\n  Called by fallback().\n*/\ngetFallback(behaviors, fn) {\n  if (behaviors[fn]) {\n    if (behaviors[fn] instanceof Function) {\n      return behaviors[fn];\n    } else {\n      return this.decorator(behaviors[fn]);\n    }\n  }\n}\n\n/* \n  Returns the handler function for the given element name\n  Called by define().\n*/\ngetHandler(behaviors, fn) {\n  if (behaviors[fn]) {\n    if (behaviors[fn] instanceof Function) {\n      return this.append(behaviors[fn]);\n    } else {\n      return this.append(this.decorator(behaviors[fn]));\n    }\n  }\n}\n\ninsert(elt, strings) {\n  let content = this.document.createElement(\"cetei-content\");\n  for (let node of Array.from(elt.childNodes)) {\n    // nodeType 1 is Node.ELEMENT_NODE\n    if (node.nodeType === 1 && !node.hasAttribute(\"data-processed\")) {\n      this.processElement(node);\n    }\n  } \n  // If we have before and after tags have them parsed by\n  // .innerHTML and then add the content to the resulting child\n  if (strings[0].match(\"<[^>]+>\") && strings[1] && strings[1].match(\"<[^>]+>\")) { \n    content.innerHTML = strings[0] + elt.innerHTML + (strings[1]?strings[1]:\"\");\n  } else {\n    content.innerHTML = strings[0];\n    content.setAttribute(\"data-before\", strings[0].replace(/<[^>]+>/g,\"\").length);\n    for (let node of Array.from(elt.childNodes)) {\n      content.appendChild(node.cloneNode(true));\n    }\n    if (strings.length > 1) {\n      content.innerHTML += strings[1];\n      content.setAttribute(\"data-after\", strings[1].replace(/<[^>]+>/g,\"\").length);\n    } \n  }\n  if (content.childNodes.length < 2) {\n    return content.firstChild;\n  } else {\n    return content;\n  }\n}\n\n// Runs behaviors recursively on the supplied element and children\nprocessElement(elt) {\n  if (elt.hasAttribute(\"data-origname\") && ! elt.hasAttribute(\"data-processed\")) {\n    let fn = this.getFallback(this.bName(elt));\n    if (fn) {\n      this.append(fn,elt);\n      elt.setAttribute(\"data-processed\", \"\");\n    }\n  }\n  for (let node of Array.from(elt.childNodes)) {\n    // nodeType 1 is Node.ELEMENT_NODE\n    if (node.nodeType === 1) {\n      this.processElement(node);\n    }\n  }\n}\n\ntemplate(str, elt) {\n  let result = str;\n  if (str.search(/\\$(\\w*)(@([a-zA-Z:]+))/ )) {\n    let re = /\\$(\\w*)@([a-zA-Z:]+)/g;\n    let replacements;\n    while (replacements = re.exec(str)) {\n      if (elt.hasAttribute(replacements[2])) {\n        if (replacements[1] && this.utilities[replacements[1]]) {\n          result = result.replace(replacements[0], this.utilities[replacements[1]](elt.getAttribute(replacements[2])));\n        } else {\n          result = result.replace(replacements[0], elt.getAttribute(replacements[2]));\n        }\n      } else {\n        result = result.replace(replacements[0], \"\");\n      }\n    }\n  }\n  return result;\n}\n\n// Define or apply behaviors for the document\napplyBehaviors() {\n  if (typeof window !== 'undefined' && window.customElements) {\n    this.define.call(this, this.els);\n  } else {\n    this.fallback.call(this, this.els);\n  }\n}\n\n/* \n  Registers the list of elements provided with the browser.\n  Called by makeHTML5(), but can be called independently if, for example,\n  you've created Custom Elements via an XSLT transformation instead.\n*/\ndefine(names) {\n  for (let name of names) {\n    const fn = this.getHandler(this.behaviors, name);\n    utilities.defineCustomElement(name, fn, this.debug);\n  }\n}\n\n/* \n  Provides fallback functionality for environments where Custom Elements\n  are not supported.\n\n  Like define(), this is called by makeHTML5(), but can be called\n  independently.\n*/\nfallback(names) {\n  for (let name of names) {\n    let fn = this.getFallback(this.behaviors, name);\n    if (fn) {\n      for (let elt of Array.from((\n          this.dom && !this.done \n          ? this.dom\n          : this.document\n        ).querySelectorAll(utilities.tagName(name)))) {\n        if (!elt.hasAttribute(\"data-processed\")) {\n          this.append(fn, elt);\n          elt.setAttribute(\"data-processed\", \"\");\n        }\n      }\n    }\n  }\n}\n\n  /**********************\n   * Utility functions  *\n   **********************/\n\n  \n  static savePosition() {\n    window.sessionStorage.setItem(window.location + \"-scroll\", window.scrollY);\n  }\n  \n  static restorePosition() {\n    if (!window.location.hash) {\n      let scroll;\n      if (scroll = window.sessionStorage.getItem(window.location + \"-scroll\")) {\n        window.sessionStorage.removeItem(window.location + \"-scroll\");\n        setTimeout(function() {\n          window.scrollTo(0, scroll);\n        }, 100);\n      }\n    } else {\n      setTimeout(function() {\n        let h = this.document.querySelector(window.decodeURI(window.location.hash));\n        if (h) {\n          h.scrollIntoView();\n        }\n      }, 100);\n    }\n  }\n\n}\n\ntry {\n  if (typeof window !== 'undefined') {\n      window.CETEI = CETEI;\n      window.addEventListener(\"beforeunload\", CETEI.savePosition);\n      var ceteiceanLoad = new Event(\"ceteiceanload\");\n      window.addEventListener(\"ceteiceanload\", CETEI.restorePosition);\n  }\n} catch (e) {\n  console.log(e);\n}\n\nexport default CETEI;\n"],"names":["utilities.hideContent","utilities.defineCustomElement","utilities.tagName"],"mappings":"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","x_google_ignoreList":[0]}