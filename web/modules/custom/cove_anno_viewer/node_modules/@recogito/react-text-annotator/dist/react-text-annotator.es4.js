import { j as jsxRuntimeExports } from "./react-text-annotator.es6.js";
import { useRef, useContext, useEffect } from "react";
import { AnnotoriousContext } from "@annotorious/react";
import { createTextAnnotator } from "@recogito/text-annotator";
/* empty css                         */
const TextAnnotator = (props) => {
  const el = useRef(null);
  const { className, children, ...opts } = props;
  const { style, filter, user } = opts;
  const { anno, setAnno } = useContext(AnnotoriousContext);
  useEffect(() => {
    if (!setAnno) return;
    const adapter = typeof opts.adapter === "function" ? opts.adapter(el.current) : opts.adapter;
    const anno2 = createTextAnnotator(el.current, { ...opts, adapter });
    setAnno(anno2);
    return () => anno2.destroy();
  }, [setAnno]);
  useEffect(() => anno == null ? void 0 : anno.setStyle(style), [anno, style]);
  useEffect(() => anno == null ? void 0 : anno.setFilter(filter), [anno, filter]);
  useEffect(() => anno == null ? void 0 : anno.setUser(user), [anno, user]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: el, className, children });
};
export {
  TextAnnotator
};
//# sourceMappingURL=react-text-annotator.es4.js.map
