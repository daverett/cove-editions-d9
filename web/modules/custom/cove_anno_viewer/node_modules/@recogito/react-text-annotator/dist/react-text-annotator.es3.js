import { j as jsxRuntimeExports } from "./react-text-annotator.es6.js";
import { useContext, useCallback, useEffect, Children, cloneElement } from "react";
import { AnnotoriousContext } from "@annotorious/react";
import { TEIPlugin } from "@recogito/text-annotator-tei";
import { createTextAnnotator } from "@recogito/text-annotator";
/* empty css                         */
const TEIAnnotator = (props) => {
  const { children, ...opts } = props;
  const { anno, setAnno } = useContext(AnnotoriousContext);
  const onLoad = useCallback((element) => {
    const anno2 = TEIPlugin(createTextAnnotator(element, opts));
    setAnno(anno2);
  }, []);
  useEffect(() => {
    if (!anno)
      return;
    anno.setStyle(props.style);
  }, [props.style]);
  useEffect(() => {
    if (!anno)
      return;
    anno.setFilter(props.filter);
  }, [props.filter]);
  return props.children ? /* @__PURE__ */ jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: Children.toArray(props.children).map((child) => cloneElement(child, { onLoad })) }) : null;
};
export {
  TEIAnnotator
};
//# sourceMappingURL=react-text-annotator.es3.js.map
