import { j as jsxRuntimeExports } from "./react-text-annotator.es6.js";
import { useRef, useEffect } from "react";
import CETEI from "./react-text-annotator.es8.js";
const PRESET_BEHAVIORS = {
  tei: {
    ref: (elem) => {
      const a = document.createElement("a");
      while (elem.firstChild) {
        a.appendChild(elem.removeChild(elem.firstChild));
      }
      a.setAttribute("href", elem.getAttribute("target"));
      elem.appendChild(a);
    },
    // Cf. https://github.com/TEIC/CETEIcean/issues/67
    graphic: (elem) => {
      var _a;
      const content = new Image();
      content.src = (_a = elem.getAttribute("url")) == null ? void 0 : _a.trim();
      if (elem.hasAttribute("width"))
        content.setAttribute("width", elem.getAttribute("width"));
      if (elem.hasAttribute("height"))
        content.setAttribute("height", elem.getAttribute("height"));
      elem.appendChild(content);
    },
    list: null,
    note: null,
    table: null,
    teiHeader: (elem) => {
      elem.hidden = true;
    }
  }
};
const CETEIcean = (props) => {
  const el = useRef(null);
  useEffect(() => {
    var _a;
    if (props.tei) {
      const ceteicean = new CETEI(props.initArgs);
      ceteicean.addBehaviors({
        ...PRESET_BEHAVIORS,
        ...props.behaviors || {},
        tei: {
          ...PRESET_BEHAVIORS.tei,
          ...((_a = props.behaviors) == null ? void 0 : _a.tei) || {}
        }
      });
      ceteicean.makeHTML5(props.tei, (data) => {
        el.current.appendChild(data);
        props.onLoad(el.current);
      });
    }
    return () => {
      el.current.innerHTML = "";
    };
  }, [props.tei, JSON.stringify(props.initArgs), props.onLoad]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "div",
    {
      ref: el,
      className: "tei-container"
    }
  );
};
export {
  CETEIcean
};
//# sourceMappingURL=react-text-annotator.es2.js.map
