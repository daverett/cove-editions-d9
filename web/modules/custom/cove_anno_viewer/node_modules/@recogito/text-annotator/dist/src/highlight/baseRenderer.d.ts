import { Filter, ViewportState } from '@annotorious/core';
import { TextAnnotatorState } from '../state';
import { ViewportBounds } from './viewport';
import { HighlightPainter } from './HighlightPainter';
import { Highlight } from './Highlight';
import { HighlightStyleExpression } from './HighlightStyle';
export interface RendererImplementation {
    destroy(): void;
    redraw(highlights: Highlight[], bounds: ViewportBounds, style?: HighlightStyleExpression, painter?: HighlightPainter, lazy?: boolean): void;
    setVisible(visible: boolean): void;
}
export interface Renderer {
    destroy(): void;
    redraw(force?: boolean): void;
    setStyle(style?: HighlightStyleExpression): void;
    setFilter(filter?: Filter): void;
    setPainter(painter?: HighlightPainter): void;
    setVisible(visible: boolean): void;
}
export declare const createBaseRenderer: <T extends TextAnnotatorState = TextAnnotatorState<import('..').TextAnnotation, import('..').TextAnnotation>>(container: HTMLElement, state: T, viewport: ViewportState, renderer: RendererImplementation) => Renderer;
